Using model for PEC_Eff_gL to generate a conditional probability table
(0,0,2): 0.12 (min=0, max=1)
(0,0,3): 0.88 (min=0, max=1)
(0,1,3): 0.016 (min=0, max=1)
(0,1,4): 0.984 (min=0, max=1)
(0,3,4): 0.016 (min=0, max=1)
(0,3,5): 0.984 (min=0, max=1)
(0,4,5): 0.016 (min=0, max=1)
(0,4,6): 0.984 (min=0, max=1)
(0,5,6): 0.016 (min=0, max=1)
(0,5,7): 0.984 (min=0, max=1)
(1,0,2): 0.1632 (min=0, max=1)
(1,0,3): 0.8368 (min=0, max=1)
(1,1,3): 0.0688 (min=0, max=1)
(1,1,4): 0.9312 (min=0, max=1)
(1,3,4): 0.0688 (min=0, max=1)
(1,3,5): 0.9312 (min=0, max=1)
(1,4,5): 0.0688 (min=0, max=1)
(1,4,6): 0.9312 (min=0, max=1)
(1,5,6): 0.0688 (min=0, max=1)
(1,5,7): 0.9312 (min=0, max=1)
(2,0,1): 0.04 (min=0, max=1)
(2,0,2): 0.2336 (min=0, max=1)
(2,0,3): 0.7264 (min=0, max=1)
(2,1,3): 0.1968 (min=0, max=1)
(2,1,4): 0.8032 (min=0, max=1)
(2,3,4): 0.1968 (min=0, max=1)
(2,3,5): 0.8032 (min=0, max=1)
(2,4,5): 0.1968 (min=0, max=1)
(2,4,6): 0.8032 (min=0, max=1)
(2,5,6): 0.1968 (min=0, max=1)
(2,5,7): 0.8032 (min=0, max=1)
(3,0,0): 0.016 (min=0, max=1)
(3,0,1): 0.152 (min=0, max=1)
(3,0,2): 0.6 (min=0, max=1)
(3,0,3): 0.232 (min=0, max=1)
(3,1,1): 0.0048 (min=0, max=1)
(3,1,2): 0.0928 (min=0, max=1)
(3,1,3): 0.6416 (min=0, max=1)
(3,1,4): 0.2608 (min=0, max=1)
(3,2,2): 0.0048 (min=0, max=1)
(3,2,3): 0.0928 (min=0, max=1)
(3,2,4): 0.9024 (min=0, max=1)
(3,3,3): 0.0048 (min=0, max=1)
(3,3,4): 0.7344 (min=0, max=1)
(3,3,5): 0.2608 (min=0, max=1)
(3,4,4): 0.0976 (min=0, max=1)
(3,4,5): 0.6416 (min=0, max=1)
(3,4,6): 0.2608 (min=0, max=1)
(3,5,4): 0.0048 (min=0, max=1)
(3,5,5): 0.0928 (min=0, max=1)
(3,5,6): 0.6416 (min=0, max=1)
(3,5,7): 0.2608 (min=0, max=1)
(3,6,5): 0.04 (min=0, max=1)
(3,6,6): 0.36 (min=0, max=1)
(3,6,7): 0.6 (min=0, max=1)
Wed Sep  7 14:25:17 2022


Moral links:

    Marrying PEC_Inf_gL and WWTP_Removal_Scenario
    Marrying Water_Consumption_ML and API_Sales_Weight_kg
    Marrying Year and Population_Scenario


Triangulating prime component with 2 members:
    PEC_SW_gL, RQ
This component is a clique of cost 90

Triangulating prime component with 2 members:
    PEC_SW_gL, PEC_Eff_gL
This component is a clique of cost 90

Triangulating prime component with 3 members:
    PEC_Eff_gL, WWTP_Removal_Scenario, PEC_Inf_gL
This component is a clique of cost 252

Triangulating prime component with 3 members:
    PEC_Inf_gL, API_Sales_Weight_kg, Water_Consumption_ML
This component is a clique of cost 420

Triangulating prime component with 3 members:
    API_Sales_Weight_kg, Water_Consumption_ML, Norway_Population_mil
This component is a clique of cost 360

Triangulating prime component with 3 members:
    Population_Scenario, Year, Norway_Population_mil
This component is a clique of cost 162


Total cost of triangulation for all prime components is 1374


Elimination sequence:

    Year
    Population_Scenario
    Norway_Population_mil
    Water_Consumption_ML
    API_Sales_Weight_kg
    WWTP_Removal_Scenario
    PEC_Inf_gL
    RQ
    PEC_Eff_gL
    PEC_SW_gL


Cliques:

Clique 6, 2 members, table size = 90:
    PEC_SW_gL, PEC_Eff_gL

Clique 5, 2 members, table size = 90:
    PEC_SW_gL, RQ

Clique 4, 3 members, table size = 252:
    PEC_Eff_gL, PEC_Inf_gL, WWTP_Removal_Scenario

Clique 3, 3 members, table size = 420:
    PEC_Inf_gL, API_Sales_Weight_kg, Water_Consumption_ML

Clique 2, 3 members, table size = 360:
    API_Sales_Weight_kg, Water_Consumption_ML, Norway_Population_mil

Clique 1, 3 members, table size = 162:
    Norway_Population_mil, Population_Scenario, Year

Total clique table size: 1374


The junction forest:

Creating junction tree with clique 6 as root ...

Cliques 5 and 6 linked, separator has 1 member and table size = 10:
    PEC_SW_gL

Cliques 4 and 6 linked, separator has 1 member and table size = 9:
    PEC_Eff_gL

Cliques 3 and 4 linked, separator has 1 member and table size = 7:
    PEC_Inf_gL

Cliques 2 and 3 linked, separator has 2 members and table size = 60:
    API_Sales_Weight_kg, Water_Consumption_ML

Cliques 1 and 2 linked, separator has 1 member and table size = 6:
    Norway_Population_mil


Assignment of potentials to cliques:

    Node Population_Scenario assigned to clique 1
    Node PEC_SW_gL assigned to clique 6
    Node PEC_Eff_gL assigned to clique 4
    Node RQ assigned to clique 5
    Node WWTP_Removal_Scenario assigned to clique 4
    Node PEC_Inf_gL assigned to clique 3
    Node API_Sales_Weight_kg assigned to clique 2
    Node Water_Consumption_ML assigned to clique 2
    Node Year assigned to clique 1
    Node Norway_Population_mil assigned to clique 1


Checking conditional probability potentials:

Warning: Conditional distributions for Norway_Population_mil sum to different values:
    min = 1
    max = 2

    No errors found


Beliefs for chance nodes:

    Population_Scenario:
	Low        0.333333
	Main       0.333333
	High       0.333333

    PEC_SW_gL:
	state0   5.94802e-05
	state1   0.00229047
	state2   0.0334901
	state3   0.0771328
	state4   0.887027
	state5   0
	state6   0
	state7   0
	state8   0
	state9   0

    PEC_Eff_gL:
	state0   0
	state1   5.94802e-05
	state2   0.00229047
	state3   0.0334901
	state4   0.96416
	state5   0
	state6   0
	state7   0
	state8   0

    RQ --> #0

    WWTP_Removal_Scenario:
	state0   0.25
	state1   0.25
	state2   0.25
	state3   0.25

    PEC_Inf_gL:
	state0   0
	state1   0.0495668
	state2   0.950433
	state3   0
	state4   0
	state5   0
	state6   0

    API_Sales_Weight_kg:
	state0   0
	state1   0
	state2   0
	state3   0
	state4   0
	state5   0.0103704
	state6   0.98963
	state7   0
	state8   0
	state9   0
	state10   0
	state11   0

    Water_Consumption_ML:
	state0   0
	state1   0.316296
	state2   0.583704
	state3   0.1
	state4   0

    Year:
	state0   0.111111
	state1   0.111111
	state2   0.111111
	state3   0.111111
	state4   0.111111
	state5   0.111111
	state6   0.111111
	state7   0.111111
	state8   0.111111

    Norway_Population_mil:
	state0   0.12963
	state1   0.333333
	state2   0.333333
	state3   0.0740741
	state4   0.0925926
	state5   0.037037


Values for real-valued function nodes:

    API_PNEC_gL: 1

    API_LM_Interc: 1

    API_LM_Coeff: 1
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for PEC_Eff_gL to generate a conditional probability table
(0,0,2): 0.12 (min=0, max=1)
(0,0,3): 0.88 (min=0, max=1)
(0,1,3): 0.016 (min=0, max=1)
(0,1,4): 0.984 (min=0, max=1)
(0,3,4): 0.016 (min=0, max=1)
(0,3,5): 0.984 (min=0, max=1)
(0,4,5): 0.016 (min=0, max=1)
(0,4,6): 0.984 (min=0, max=1)
(0,5,6): 0.016 (min=0, max=1)
(0,5,7): 0.984 (min=0, max=1)
(1,0,2): 0.1632 (min=0, max=1)
(1,0,3): 0.8368 (min=0, max=1)
(1,1,3): 0.0688 (min=0, max=1)
(1,1,4): 0.9312 (min=0, max=1)
(1,3,4): 0.0688 (min=0, max=1)
(1,3,5): 0.9312 (min=0, max=1)
(1,4,5): 0.0688 (min=0, max=1)
(1,4,6): 0.9312 (min=0, max=1)
(1,5,6): 0.0688 (min=0, max=1)
(1,5,7): 0.9312 (min=0, max=1)
(2,0,1): 0.04 (min=0, max=1)
(2,0,2): 0.2336 (min=0, max=1)
(2,0,3): 0.7264 (min=0, max=1)
(2,1,3): 0.1968 (min=0, max=1)
(2,1,4): 0.8032 (min=0, max=1)
(2,3,4): 0.1968 (min=0, max=1)
(2,3,5): 0.8032 (min=0, max=1)
(2,4,5): 0.1968 (min=0, max=1)
(2,4,6): 0.8032 (min=0, max=1)
(2,5,6): 0.1968 (min=0, max=1)
(2,5,7): 0.8032 (min=0, max=1)
(3,0,0): 0.016 (min=0, max=1)
(3,0,1): 0.152 (min=0, max=1)
(3,0,2): 0.6 (min=0, max=1)
(3,0,3): 0.232 (min=0, max=1)
(3,1,1): 0.0048 (min=0, max=1)
(3,1,2): 0.0928 (min=0, max=1)
(3,1,3): 0.6416 (min=0, max=1)
(3,1,4): 0.2608 (min=0, max=1)
(3,2,2): 0.0048 (min=0, max=1)
(3,2,3): 0.0928 (min=0, max=1)
(3,2,4): 0.9024 (min=0, max=1)
(3,3,3): 0.0048 (min=0, max=1)
(3,3,4): 0.7344 (min=0, max=1)
(3,3,5): 0.2608 (min=0, max=1)
(3,4,4): 0.0976 (min=0, max=1)
(3,4,5): 0.6416 (min=0, max=1)
(3,4,6): 0.2608 (min=0, max=1)
(3,5,4): 0.0048 (min=0, max=1)
(3,5,5): 0.0928 (min=0, max=1)
(3,5,6): 0.6416 (min=0, max=1)
(3,5,7): 0.2608 (min=0, max=1)
(3,6,5): 0.04 (min=0, max=1)
(3,6,6): 0.36 (min=0, max=1)
(3,6,7): 0.6 (min=0, max=1)
Wed Sep  7 14:27:39 2022


Moral links:

    Marrying PEC_Inf_gL and WWTP_Removal_Scenario
    Marrying Water_Consumption_ML and API_Sales_Weight_kg
    Marrying Year and Population_Scenario


Triangulating prime component with 2 members:
    PEC_SW_gL, RQ
This component is a clique of cost 90

Triangulating prime component with 2 members:
    PEC_SW_gL, PEC_Eff_gL
This component is a clique of cost 90

Triangulating prime component with 3 members:
    PEC_Eff_gL, WWTP_Removal_Scenario, PEC_Inf_gL
This component is a clique of cost 252

Triangulating prime component with 3 members:
    PEC_Inf_gL, API_Sales_Weight_kg, Water_Consumption_ML
This component is a clique of cost 420

Triangulating prime component with 3 members:
    API_Sales_Weight_kg, Water_Consumption_ML, Norway_Population_mil
This component is a clique of cost 360

Triangulating prime component with 3 members:
    Population_Scenario, Year, Norway_Population_mil
This component is a clique of cost 162


Total cost of triangulation for all prime components is 1374


Elimination sequence:

    Year
    Population_Scenario
    Norway_Population_mil
    Water_Consumption_ML
    API_Sales_Weight_kg
    WWTP_Removal_Scenario
    PEC_Inf_gL
    RQ
    PEC_Eff_gL
    PEC_SW_gL


Cliques:

Clique 6, 2 members, table size = 90:
    PEC_SW_gL, PEC_Eff_gL

Clique 5, 2 members, table size = 90:
    PEC_SW_gL, RQ

Clique 4, 3 members, table size = 252:
    PEC_Eff_gL, PEC_Inf_gL, WWTP_Removal_Scenario

Clique 3, 3 members, table size = 420:
    PEC_Inf_gL, API_Sales_Weight_kg, Water_Consumption_ML

Clique 2, 3 members, table size = 360:
    API_Sales_Weight_kg, Water_Consumption_ML, Norway_Population_mil

Clique 1, 3 members, table size = 162:
    Norway_Population_mil, Population_Scenario, Year

Total clique table size: 1374


The junction forest:

Creating junction tree with clique 6 as root ...

Cliques 5 and 6 linked, separator has 1 member and table size = 10:
    PEC_SW_gL

Cliques 4 and 6 linked, separator has 1 member and table size = 9:
    PEC_Eff_gL

Cliques 3 and 4 linked, separator has 1 member and table size = 7:
    PEC_Inf_gL

Cliques 2 and 3 linked, separator has 2 members and table size = 60:
    API_Sales_Weight_kg, Water_Consumption_ML

Cliques 1 and 2 linked, separator has 1 member and table size = 6:
    Norway_Population_mil


Assignment of potentials to cliques:

    Node Population_Scenario assigned to clique 1
    Node PEC_SW_gL assigned to clique 6
    Node PEC_Eff_gL assigned to clique 4
    Node RQ assigned to clique 5
    Node WWTP_Removal_Scenario assigned to clique 4
    Node PEC_Inf_gL assigned to clique 3
    Node API_Sales_Weight_kg assigned to clique 2
    Node Water_Consumption_ML assigned to clique 2
    Node Year assigned to clique 1
    Node Norway_Population_mil assigned to clique 1


Checking conditional probability potentials:

Warning: Conditional distributions for Norway_Population_mil sum to different values:
    min = 1
    max = 2

    No errors found


Beliefs for chance nodes:

    Population_Scenario:
	Low        0.333333
	Main       0.333333
	High       0.333333

    PEC_SW_gL:
	state0   5.94802e-05
	state1   0.00229047
	state2   0.0334901
	state3   0.0771328
	state4   0.887027
	state5   0
	state6   0
	state7   0
	state8   0
	state9   0

    PEC_Eff_gL:
	state0   0
	state1   5.94802e-05
	state2   0.00229047
	state3   0.0334901
	state4   0.96416
	state5   0
	state6   0
	state7   0
	state8   0

    RQ --> #0

    WWTP_Removal_Scenario:
	state0   0.25
	state1   0.25
	state2   0.25
	state3   0.25

    PEC_Inf_gL:
	state0   0
	state1   0.0495668
	state2   0.950433
	state3   0
	state4   0
	state5   0
	state6   0

    API_Sales_Weight_kg:
	state0   0
	state1   0
	state2   0
	state3   0
	state4   0
	state5   0.0103704
	state6   0.98963
	state7   0
	state8   0
	state9   0
	state10   0
	state11   0

    Water_Consumption_ML:
	state0   0
	state1   0.316296
	state2   0.583704
	state3   0.1
	state4   0

    Year:
	state0   0.111111
	state1   0.111111
	state2   0.111111
	state3   0.111111
	state4   0.111111
	state5   0.111111
	state6   0.111111
	state7   0.111111
	state8   0.111111

    Norway_Population_mil:
	state0   0.12963
	state1   0.333333
	state2   0.333333
	state3   0.0740741
	state4   0.0925926
	state5   0.037037


Values for real-valued function nodes:

    API_PNEC_gL: 1

    API_LM_Interc: 1

    API_LM_Coeff: 1
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -2.11011e+10
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for PEC_Eff_gL to generate a conditional probability table
(0,0,2): 0.12 (min=0, max=1)
(0,0,3): 0.88 (min=0, max=1)
(0,1,3): 0.016 (min=0, max=1)
(0,1,4): 0.984 (min=0, max=1)
(0,3,4): 0.016 (min=0, max=1)
(0,3,5): 0.984 (min=0, max=1)
(0,4,5): 0.016 (min=0, max=1)
(0,4,6): 0.984 (min=0, max=1)
(0,5,6): 0.016 (min=0, max=1)
(0,5,7): 0.984 (min=0, max=1)
(1,0,2): 0.1632 (min=0, max=1)
(1,0,3): 0.8368 (min=0, max=1)
(1,1,3): 0.0688 (min=0, max=1)
(1,1,4): 0.9312 (min=0, max=1)
(1,3,4): 0.0688 (min=0, max=1)
(1,3,5): 0.9312 (min=0, max=1)
(1,4,5): 0.0688 (min=0, max=1)
(1,4,6): 0.9312 (min=0, max=1)
(1,5,6): 0.0688 (min=0, max=1)
(1,5,7): 0.9312 (min=0, max=1)
(2,0,1): 0.04 (min=0, max=1)
(2,0,2): 0.2336 (min=0, max=1)
(2,0,3): 0.7264 (min=0, max=1)
(2,1,3): 0.1968 (min=0, max=1)
(2,1,4): 0.8032 (min=0, max=1)
(2,3,4): 0.1968 (min=0, max=1)
(2,3,5): 0.8032 (min=0, max=1)
(2,4,5): 0.1968 (min=0, max=1)
(2,4,6): 0.8032 (min=0, max=1)
(2,5,6): 0.1968 (min=0, max=1)
(2,5,7): 0.8032 (min=0, max=1)
(3,0,0): 0.016 (min=0, max=1)
(3,0,1): 0.152 (min=0, max=1)
(3,0,2): 0.6 (min=0, max=1)
(3,0,3): 0.232 (min=0, max=1)
(3,1,1): 0.0048 (min=0, max=1)
(3,1,2): 0.0928 (min=0, max=1)
(3,1,3): 0.6416 (min=0, max=1)
(3,1,4): 0.2608 (min=0, max=1)
(3,2,2): 0.0048 (min=0, max=1)
(3,2,3): 0.0928 (min=0, max=1)
(3,2,4): 0.9024 (min=0, max=1)
(3,3,3): 0.0048 (min=0, max=1)
(3,3,4): 0.7344 (min=0, max=1)
(3,3,5): 0.2608 (min=0, max=1)
(3,4,4): 0.0976 (min=0, max=1)
(3,4,5): 0.6416 (min=0, max=1)
(3,4,6): 0.2608 (min=0, max=1)
(3,5,4): 0.0048 (min=0, max=1)
(3,5,5): 0.0928 (min=0, max=1)
(3,5,6): 0.6416 (min=0, max=1)
(3,5,7): 0.2608 (min=0, max=1)
(3,6,5): 0.04 (min=0, max=1)
(3,6,6): 0.36 (min=0, max=1)
(3,6,7): 0.6 (min=0, max=1)
Wed Sep  7 14:31:49 2022


Moral links:

    Marrying PEC_Inf_gL and WWTP_Removal_Scenario
    Marrying Water_Consumption_ML and API_Sales_Weight_kg
    Marrying Year and Population_Scenario


Triangulating prime component with 2 members:
    PEC_SW_gL, RQ
This component is a clique of cost 90

Triangulating prime component with 2 members:
    PEC_SW_gL, PEC_Eff_gL
This component is a clique of cost 90

Triangulating prime component with 3 members:
    PEC_Eff_gL, WWTP_Removal_Scenario, PEC_Inf_gL
This component is a clique of cost 252

Triangulating prime component with 3 members:
    PEC_Inf_gL, API_Sales_Weight_kg, Water_Consumption_ML
This component is a clique of cost 420

Triangulating prime component with 3 members:
    API_Sales_Weight_kg, Water_Consumption_ML, Norway_Population_mil
This component is a clique of cost 360

Triangulating prime component with 3 members:
    Population_Scenario, Year, Norway_Population_mil
This component is a clique of cost 162


Total cost of triangulation for all prime components is 1374


Elimination sequence:

    Year
    Population_Scenario
    Norway_Population_mil
    Water_Consumption_ML
    API_Sales_Weight_kg
    WWTP_Removal_Scenario
    PEC_Inf_gL
    RQ
    PEC_Eff_gL
    PEC_SW_gL


Cliques:

Clique 6, 2 members, table size = 90:
    PEC_SW_gL, PEC_Eff_gL

Clique 5, 2 members, table size = 90:
    PEC_SW_gL, RQ

Clique 4, 3 members, table size = 252:
    PEC_Eff_gL, PEC_Inf_gL, WWTP_Removal_Scenario

Clique 3, 3 members, table size = 420:
    PEC_Inf_gL, API_Sales_Weight_kg, Water_Consumption_ML

Clique 2, 3 members, table size = 360:
    API_Sales_Weight_kg, Water_Consumption_ML, Norway_Population_mil

Clique 1, 3 members, table size = 162:
    Norway_Population_mil, Population_Scenario, Year

Total clique table size: 1374


The junction forest:

Creating junction tree with clique 6 as root ...

Cliques 5 and 6 linked, separator has 1 member and table size = 10:
    PEC_SW_gL

Cliques 4 and 6 linked, separator has 1 member and table size = 9:
    PEC_Eff_gL

Cliques 3 and 4 linked, separator has 1 member and table size = 7:
    PEC_Inf_gL

Cliques 2 and 3 linked, separator has 2 members and table size = 60:
    API_Sales_Weight_kg, Water_Consumption_ML

Cliques 1 and 2 linked, separator has 1 member and table size = 6:
    Norway_Population_mil


Assignment of potentials to cliques:

    Node Population_Scenario assigned to clique 1
    Node PEC_SW_gL assigned to clique 6
    Node PEC_Eff_gL assigned to clique 4
    Node RQ assigned to clique 5
    Node WWTP_Removal_Scenario assigned to clique 4
    Node PEC_Inf_gL assigned to clique 3
    Node API_Sales_Weight_kg assigned to clique 2
    Node Water_Consumption_ML assigned to clique 2
    Node Year assigned to clique 1
    Node Norway_Population_mil assigned to clique 1


Checking conditional probability potentials:

Warning: Conditional distributions for Norway_Population_mil sum to different values:
    min = 1
    max = 2

    No errors found


Beliefs for chance nodes:

    Population_Scenario:
	Low        0.333333
	Main       0.333333
	High       0.333333

    PEC_SW_gL:
	state0   5.94802e-05
	state1   0.00229047
	state2   0.0334901
	state3   0.0771328
	state4   0.887027
	state5   0
	state6   0
	state7   0
	state8   0
	state9   0

    PEC_Eff_gL:
	state0   0
	state1   5.94802e-05
	state2   0.00229047
	state3   0.0334901
	state4   0.96416
	state5   0
	state6   0
	state7   0
	state8   0

    RQ --> #0

    WWTP_Removal_Scenario:
	state0   0.25
	state1   0.25
	state2   0.25
	state3   0.25

    PEC_Inf_gL:
	state0   0
	state1   0.0495668
	state2   0.950433
	state3   0
	state4   0
	state5   0
	state6   0

    API_Sales_Weight_kg:
	state0   0
	state1   0
	state2   0
	state3   0
	state4   0
	state5   0.0103704
	state6   0.98963
	state7   0
	state8   0
	state9   0
	state10   0
	state11   0

    Water_Consumption_ML:
	state0   0
	state1   0.316296
	state2   0.583704
	state3   0.1
	state4   0

    Year:
	state0   0.111111
	state1   0.111111
	state2   0.111111
	state3   0.111111
	state4   0.111111
	state5   0.111111
	state6   0.111111
	state7   0.111111
	state8   0.111111

    Norway_Population_mil:
	state0   0.12963
	state1   0.333333
	state2   0.333333
	state3   0.0740741
	state4   0.0925926
	state5   0.037037


Values for real-valued function nodes:

    API_PNEC_gL: 1

    API_LM_Interc: 1

    API_LM_Coeff: 1
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for PEC_Eff_gL to generate a conditional probability table
(0,0,2): 0.08 (min=0, max=1)
(0,0,3): 0.92 (min=0, max=1)
(1,0,2): 0.12 (min=0, max=1)
(1,0,3): 0.88 (min=0, max=1)
(1,1,3): 0.04 (min=0, max=1)
(1,1,4): 0.96 (min=0, max=1)
(1,3,4): 0.04 (min=0, max=1)
(1,3,5): 0.96 (min=0, max=1)
(1,4,5): 0.04 (min=0, max=1)
(1,4,6): 0.96 (min=0, max=1)
(1,5,6): 0.04 (min=0, max=1)
(1,5,7): 0.96 (min=0, max=1)
(2,0,2): 0.2 (min=0, max=1)
(2,0,3): 0.8 (min=0, max=1)
(2,1,3): 0.12 (min=0, max=1)
(2,1,4): 0.88 (min=0, max=1)
(2,3,4): 0.12 (min=0, max=1)
(2,3,5): 0.88 (min=0, max=1)
(2,4,5): 0.12 (min=0, max=1)
(2,4,6): 0.88 (min=0, max=1)
(2,5,6): 0.12 (min=0, max=1)
(2,5,7): 0.88 (min=0, max=1)
(3,0,1): 0.04 (min=0, max=1)
(3,0,2): 0.36 (min=0, max=1)
(3,0,3): 0.6 (min=0, max=1)
(3,1,3): 0.32 (min=0, max=1)
(3,1,4): 0.68 (min=0, max=1)
(3,3,4): 0.32 (min=0, max=1)
(3,3,5): 0.68 (min=0, max=1)
(3,4,5): 0.32 (min=0, max=1)
(3,4,6): 0.68 (min=0, max=1)
(3,5,6): 0.32 (min=0, max=1)
(3,5,7): 0.68 (min=0, max=1)
Wed Sep  7 14:34:31 2022


Moral links:

    Marrying PEC_Inf_gL and WWTP_Removal_Scenario
    Marrying Water_Consumption_ML and API_Sales_Weight_kg
    Marrying Year and Population_Scenario


Triangulating prime component with 2 members:
    PEC_SW_gL, RQ
This component is a clique of cost 90

Triangulating prime component with 2 members:
    PEC_SW_gL, PEC_Eff_gL
This component is a clique of cost 90

Triangulating prime component with 3 members:
    PEC_Eff_gL, WWTP_Removal_Scenario, PEC_Inf_gL
This component is a clique of cost 315

Triangulating prime component with 3 members:
    PEC_Inf_gL, API_Sales_Weight_kg, Water_Consumption_ML
This component is a clique of cost 420

Triangulating prime component with 3 members:
    API_Sales_Weight_kg, Water_Consumption_ML, Norway_Population_mil
This component is a clique of cost 360

Triangulating prime component with 3 members:
    Population_Scenario, Year, Norway_Population_mil
This component is a clique of cost 162


Total cost of triangulation for all prime components is 1437


Elimination sequence:

    Year
    Population_Scenario
    Norway_Population_mil
    Water_Consumption_ML
    API_Sales_Weight_kg
    WWTP_Removal_Scenario
    PEC_Inf_gL
    RQ
    PEC_Eff_gL
    PEC_SW_gL


Cliques:

Clique 6, 2 members, table size = 90:
    PEC_SW_gL, PEC_Eff_gL

Clique 5, 2 members, table size = 90:
    PEC_SW_gL, RQ

Clique 4, 3 members, table size = 315:
    PEC_Eff_gL, PEC_Inf_gL, WWTP_Removal_Scenario

Clique 3, 3 members, table size = 420:
    PEC_Inf_gL, API_Sales_Weight_kg, Water_Consumption_ML

Clique 2, 3 members, table size = 360:
    API_Sales_Weight_kg, Water_Consumption_ML, Norway_Population_mil

Clique 1, 3 members, table size = 162:
    Norway_Population_mil, Population_Scenario, Year

Total clique table size: 1437


The junction forest:

Creating junction tree with clique 6 as root ...

Cliques 5 and 6 linked, separator has 1 member and table size = 10:
    PEC_SW_gL

Cliques 4 and 6 linked, separator has 1 member and table size = 9:
    PEC_Eff_gL

Cliques 3 and 4 linked, separator has 1 member and table size = 7:
    PEC_Inf_gL

Cliques 2 and 3 linked, separator has 2 members and table size = 60:
    API_Sales_Weight_kg, Water_Consumption_ML

Cliques 1 and 2 linked, separator has 1 member and table size = 6:
    Norway_Population_mil


Assignment of potentials to cliques:

    Node Population_Scenario assigned to clique 1
    Node PEC_SW_gL assigned to clique 6
    Node PEC_Eff_gL assigned to clique 4
    Node RQ assigned to clique 5
    Node WWTP_Removal_Scenario assigned to clique 4
    Node PEC_Inf_gL assigned to clique 3
    Node API_Sales_Weight_kg assigned to clique 2
    Node Water_Consumption_ML assigned to clique 2
    Node Year assigned to clique 1
    Node Norway_Population_mil assigned to clique 1


Checking conditional probability potentials:

Warning: Conditional distributions for Norway_Population_mil sum to different values:
    min = 1
    max = 2

    No errors found


Beliefs for chance nodes:

    Population_Scenario:
	Low        0.333333
	Main       0.333333
	High       0.333333

    PEC_SW_gL:
	state0   0.2
	state1   0
	state2   0.00475841
	state3   0.0636193
	state4   0.731622
	state5   0
	state6   0
	state7   0
	state8   0
	state9   0

    PEC_Eff_gL:
	state0   0.2
	state1   0
	state2   0
	state3   0.00475841
	state4   0.795242
	state5   0
	state6   0
	state7   0
	state8   0

    RQ --> #0

    WWTP_Removal_Scenario:
	state0   0.2
	state1   0.2
	state2   0.2
	state3   0.2
	state4   0.2

    PEC_Inf_gL:
	state0   0
	state1   0.0495668
	state2   0.950433
	state3   0
	state4   0
	state5   0
	state6   0

    API_Sales_Weight_kg:
	state0   0
	state1   0
	state2   0
	state3   0
	state4   0
	state5   0.0103704
	state6   0.98963
	state7   0
	state8   0
	state9   0
	state10   0
	state11   0

    Water_Consumption_ML:
	state0   0
	state1   0.316296
	state2   0.583704
	state3   0.1
	state4   0

    Year:
	state0   0.111111
	state1   0.111111
	state2   0.111111
	state3   0.111111
	state4   0.111111
	state5   0.111111
	state6   0.111111
	state7   0.111111
	state8   0.111111

    Norway_Population_mil:
	state0   0.12963
	state1   0.333333
	state2   0.333333
	state3   0.0740741
	state4   0.0925926
	state5   0.037037


Values for real-valued function nodes:

    API_PNEC_gL: 1

    API_LM_Interc: 1

    API_LM_Coeff: 1
Using model for PEC_Eff_gL to generate a conditional probability table
(1,0,1): 0.04 (min=0, max=1)
(1,0,2): 0.36 (min=0, max=1)
(1,0,3): 0.6 (min=0, max=1)
(1,1,3): 0.32 (min=0, max=1)
(1,1,4): 0.68 (min=0, max=1)
(1,3,4): 0.32 (min=0, max=1)
(1,3,5): 0.68 (min=0, max=1)
(1,4,5): 0.32 (min=0, max=1)
(1,4,6): 0.68 (min=0, max=1)
(1,5,6): 0.32 (min=0, max=1)
(1,5,7): 0.68 (min=0, max=1)
(2,0,2): 0.2 (min=0, max=1)
(2,0,3): 0.8 (min=0, max=1)
(2,1,3): 0.12 (min=0, max=1)
(2,1,4): 0.88 (min=0, max=1)
(2,3,4): 0.12 (min=0, max=1)
(2,3,5): 0.88 (min=0, max=1)
(2,4,5): 0.12 (min=0, max=1)
(2,4,6): 0.88 (min=0, max=1)
(2,5,6): 0.12 (min=0, max=1)
(2,5,7): 0.88 (min=0, max=1)
(3,0,2): 0.12 (min=0, max=1)
(3,0,3): 0.88 (min=0, max=1)
(3,1,3): 0.04 (min=0, max=1)
(3,1,4): 0.96 (min=0, max=1)
(3,3,4): 0.04 (min=0, max=1)
(3,3,5): 0.96 (min=0, max=1)
(3,4,5): 0.04 (min=0, max=1)
(3,4,6): 0.96 (min=0, max=1)
(3,5,6): 0.04 (min=0, max=1)
(3,5,7): 0.96 (min=0, max=1)
(4,0,2): 0.08 (min=0, max=1)
(4,0,3): 0.92 (min=0, max=1)
Wed Sep  7 14:35:53 2022


Moral links:

    Marrying PEC_Inf_gL and WWTP_Removal_Scenario
    Marrying Water_Consumption_ML and API_Sales_Weight_kg
    Marrying Year and Population_Scenario


Triangulating prime component with 2 members:
    PEC_SW_gL, RQ
This component is a clique of cost 90

Triangulating prime component with 2 members:
    PEC_SW_gL, PEC_Eff_gL
This component is a clique of cost 90

Triangulating prime component with 3 members:
    PEC_Eff_gL, WWTP_Removal_Scenario, PEC_Inf_gL
This component is a clique of cost 315

Triangulating prime component with 3 members:
    PEC_Inf_gL, API_Sales_Weight_kg, Water_Consumption_ML
This component is a clique of cost 420

Triangulating prime component with 3 members:
    API_Sales_Weight_kg, Water_Consumption_ML, Norway_Population_mil
This component is a clique of cost 360

Triangulating prime component with 3 members:
    Population_Scenario, Year, Norway_Population_mil
This component is a clique of cost 162


Total cost of triangulation for all prime components is 1437


Elimination sequence:

    Year
    Population_Scenario
    Norway_Population_mil
    Water_Consumption_ML
    API_Sales_Weight_kg
    WWTP_Removal_Scenario
    PEC_Inf_gL
    RQ
    PEC_Eff_gL
    PEC_SW_gL


Cliques:

Clique 6, 2 members, table size = 90:
    PEC_SW_gL, PEC_Eff_gL

Clique 5, 2 members, table size = 90:
    PEC_SW_gL, RQ

Clique 4, 3 members, table size = 315:
    PEC_Eff_gL, PEC_Inf_gL, WWTP_Removal_Scenario

Clique 3, 3 members, table size = 420:
    PEC_Inf_gL, API_Sales_Weight_kg, Water_Consumption_ML

Clique 2, 3 members, table size = 360:
    API_Sales_Weight_kg, Water_Consumption_ML, Norway_Population_mil

Clique 1, 3 members, table size = 162:
    Norway_Population_mil, Population_Scenario, Year

Total clique table size: 1437


The junction forest:

Creating junction tree with clique 6 as root ...

Cliques 5 and 6 linked, separator has 1 member and table size = 10:
    PEC_SW_gL

Cliques 4 and 6 linked, separator has 1 member and table size = 9:
    PEC_Eff_gL

Cliques 3 and 4 linked, separator has 1 member and table size = 7:
    PEC_Inf_gL

Cliques 2 and 3 linked, separator has 2 members and table size = 60:
    API_Sales_Weight_kg, Water_Consumption_ML

Cliques 1 and 2 linked, separator has 1 member and table size = 6:
    Norway_Population_mil


Assignment of potentials to cliques:

    Node Population_Scenario assigned to clique 1
    Node PEC_SW_gL assigned to clique 6
    Node PEC_Eff_gL assigned to clique 4
    Node RQ assigned to clique 5
    Node WWTP_Removal_Scenario assigned to clique 4
    Node PEC_Inf_gL assigned to clique 3
    Node API_Sales_Weight_kg assigned to clique 2
    Node Water_Consumption_ML assigned to clique 2
    Node Year assigned to clique 1
    Node Norway_Population_mil assigned to clique 1


Checking conditional probability potentials:

Warning: Conditional distributions for Norway_Population_mil sum to different values:
    min = 1
    max = 2

    No errors found


Beliefs for chance nodes:

    Population_Scenario:
	Low        0.333333
	Main       0.333333
	High       0.333333

    PEC_SW_gL:
	state0   0.2
	state1   0
	state2   0.00475841
	state3   0.0636193
	state4   0.731622
	state5   0
	state6   0
	state7   0
	state8   0
	state9   0

    PEC_Eff_gL:
	state0   0.2
	state1   0
	state2   0
	state3   0.00475841
	state4   0.795242
	state5   0
	state6   0
	state7   0
	state8   0

    RQ --> #0

    WWTP_Removal_Scenario:
	state0   0.2
	state1   0.2
	state2   0.2
	state3   0.2
	state4   0.2

    PEC_Inf_gL:
	state0   0
	state1   0.0495668
	state2   0.950433
	state3   0
	state4   0
	state5   0
	state6   0

    API_Sales_Weight_kg:
	state0   0
	state1   0
	state2   0
	state3   0
	state4   0
	state5   0.0103704
	state6   0.98963
	state7   0
	state8   0
	state9   0
	state10   0
	state11   0

    Water_Consumption_ML:
	state0   0
	state1   0.316296
	state2   0.583704
	state3   0.1
	state4   0

    Year:
	state0   0.111111
	state1   0.111111
	state2   0.111111
	state3   0.111111
	state4   0.111111
	state5   0.111111
	state6   0.111111
	state7   0.111111
	state8   0.111111

    Norway_Population_mil:
	state0   0.12963
	state1   0.333333
	state2   0.333333
	state3   0.0740741
	state4   0.0925926
	state5   0.037037


Values for real-valued function nodes:

    API_PNEC_gL: 1

    API_LM_Interc: 1

    API_LM_Coeff: 1
Using model for PEC_Eff_gL to generate a conditional probability table
(0,0,2): 0.08 (min=0, max=1)
(0,0,3): 0.92 (min=0, max=1)
(1,0,2): 0.12 (min=0, max=1)
(1,0,3): 0.88 (min=0, max=1)
(1,1,3): 0.04 (min=0, max=1)
(1,1,4): 0.96 (min=0, max=1)
(1,3,4): 0.04 (min=0, max=1)
(1,3,5): 0.96 (min=0, max=1)
(1,4,5): 0.04 (min=0, max=1)
(1,4,6): 0.96 (min=0, max=1)
(1,5,6): 0.04 (min=0, max=1)
(1,5,7): 0.96 (min=0, max=1)
(2,0,2): 0.2 (min=0, max=1)
(2,0,3): 0.8 (min=0, max=1)
(2,1,3): 0.12 (min=0, max=1)
(2,1,4): 0.88 (min=0, max=1)
(2,3,4): 0.12 (min=0, max=1)
(2,3,5): 0.88 (min=0, max=1)
(2,4,5): 0.12 (min=0, max=1)
(2,4,6): 0.88 (min=0, max=1)
(2,5,6): 0.12 (min=0, max=1)
(2,5,7): 0.88 (min=0, max=1)
(3,0,1): 0.04 (min=0, max=1)
(3,0,2): 0.36 (min=0, max=1)
(3,0,3): 0.6 (min=0, max=1)
(3,1,3): 0.32 (min=0, max=1)
(3,1,4): 0.68 (min=0, max=1)
(3,3,4): 0.32 (min=0, max=1)
(3,3,5): 0.68 (min=0, max=1)
(3,4,5): 0.32 (min=0, max=1)
(3,4,6): 0.68 (min=0, max=1)
(3,5,6): 0.32 (min=0, max=1)
(3,5,7): 0.68 (min=0, max=1)
Wed Sep  7 14:39:06 2022


Moral links:

    Marrying PEC_Inf_gL and WWTP_Removal_Scenario
    Marrying Water_Consumption_ML and API_Sales_Weight_kg
    Marrying Year and Population_Scenario


Triangulating prime component with 2 members:
    PEC_SW_gL, RQ
This component is a clique of cost 90

Triangulating prime component with 2 members:
    PEC_SW_gL, PEC_Eff_gL
This component is a clique of cost 90

Triangulating prime component with 3 members:
    PEC_Eff_gL, WWTP_Removal_Scenario, PEC_Inf_gL
This component is a clique of cost 315

Triangulating prime component with 3 members:
    PEC_Inf_gL, API_Sales_Weight_kg, Water_Consumption_ML
This component is a clique of cost 420

Triangulating prime component with 3 members:
    API_Sales_Weight_kg, Water_Consumption_ML, Norway_Population_mil
This component is a clique of cost 360

Triangulating prime component with 3 members:
    Population_Scenario, Year, Norway_Population_mil
This component is a clique of cost 162


Total cost of triangulation for all prime components is 1437


Elimination sequence:

    Year
    Population_Scenario
    Norway_Population_mil
    Water_Consumption_ML
    API_Sales_Weight_kg
    WWTP_Removal_Scenario
    PEC_Inf_gL
    RQ
    PEC_Eff_gL
    PEC_SW_gL


Cliques:

Clique 6, 2 members, table size = 90:
    PEC_SW_gL, PEC_Eff_gL

Clique 5, 2 members, table size = 90:
    PEC_SW_gL, RQ

Clique 4, 3 members, table size = 315:
    PEC_Eff_gL, PEC_Inf_gL, WWTP_Removal_Scenario

Clique 3, 3 members, table size = 420:
    PEC_Inf_gL, API_Sales_Weight_kg, Water_Consumption_ML

Clique 2, 3 members, table size = 360:
    API_Sales_Weight_kg, Water_Consumption_ML, Norway_Population_mil

Clique 1, 3 members, table size = 162:
    Norway_Population_mil, Population_Scenario, Year

Total clique table size: 1437


The junction forest:

Creating junction tree with clique 6 as root ...

Cliques 5 and 6 linked, separator has 1 member and table size = 10:
    PEC_SW_gL

Cliques 4 and 6 linked, separator has 1 member and table size = 9:
    PEC_Eff_gL

Cliques 3 and 4 linked, separator has 1 member and table size = 7:
    PEC_Inf_gL

Cliques 2 and 3 linked, separator has 2 members and table size = 60:
    API_Sales_Weight_kg, Water_Consumption_ML

Cliques 1 and 2 linked, separator has 1 member and table size = 6:
    Norway_Population_mil


Assignment of potentials to cliques:

    Node Population_Scenario assigned to clique 1
    Node PEC_SW_gL assigned to clique 6
    Node PEC_Eff_gL assigned to clique 4
    Node RQ assigned to clique 5
    Node WWTP_Removal_Scenario assigned to clique 4
    Node PEC_Inf_gL assigned to clique 3
    Node API_Sales_Weight_kg assigned to clique 2
    Node Water_Consumption_ML assigned to clique 2
    Node Year assigned to clique 1
    Node Norway_Population_mil assigned to clique 1


Checking conditional probability potentials:

Warning: Conditional distributions for Norway_Population_mil sum to different values:
    min = 1
    max = 2

    No errors found


Beliefs for chance nodes:

    Population_Scenario:
	Low        0.333333
	Main       0.333333
	High       0.333333

    PEC_SW_gL:
	state0   0.2
	state1   0
	state2   0.00475841
	state3   0.0636193
	state4   0.731622
	state5   0
	state6   0
	state7   0
	state8   0
	state9   0

    PEC_Eff_gL:
	state0   0.2
	state1   0
	state2   0
	state3   0.00475841
	state4   0.795242
	state5   0
	state6   0
	state7   0
	state8   0

    RQ --> #0

    WWTP_Removal_Scenario:
	state0   0.2
	state1   0.2
	state2   0.2
	state3   0.2
	state4   0.2

    PEC_Inf_gL:
	state0   0
	state1   0.0495668
	state2   0.950433
	state3   0
	state4   0
	state5   0
	state6   0

    API_Sales_Weight_kg:
	state0   0
	state1   0
	state2   0
	state3   0
	state4   0
	state5   0.0103704
	state6   0.98963
	state7   0
	state8   0
	state9   0
	state10   0
	state11   0

    Water_Consumption_ML:
	state0   0
	state1   0.316296
	state2   0.583704
	state3   0.1
	state4   0

    Year:
	state0   0.111111
	state1   0.111111
	state2   0.111111
	state3   0.111111
	state4   0.111111
	state5   0.111111
	state6   0.111111
	state7   0.111111
	state8   0.111111

    Norway_Population_mil:
	state0   0.12963
	state1   0.333333
	state2   0.333333
	state3   0.0740741
	state4   0.0925926
	state5   0.037037


Values for real-valued function nodes:

    API_PNEC_gL: 1

    API_LM_Interc: 1

    API_LM_Coeff: 1
Using model for PEC_Eff_gL to generate a conditional probability table
(0,0,2): 0.12 (min=0, max=1)
(0,0,3): 0.88 (min=0, max=1)
(0,1,3): 0.016 (min=0, max=1)
(0,1,4): 0.984 (min=0, max=1)
(0,3,4): 0.016 (min=0, max=1)
(0,3,5): 0.984 (min=0, max=1)
(0,4,5): 0.016 (min=0, max=1)
(0,4,6): 0.984 (min=0, max=1)
(0,5,6): 0.016 (min=0, max=1)
(0,5,7): 0.984 (min=0, max=1)
(1,0,2): 0.1632 (min=0, max=1)
(1,0,3): 0.8368 (min=0, max=1)
(1,1,3): 0.0688 (min=0, max=1)
(1,1,4): 0.9312 (min=0, max=1)
(1,3,4): 0.0688 (min=0, max=1)
(1,3,5): 0.9312 (min=0, max=1)
(1,4,5): 0.0688 (min=0, max=1)
(1,4,6): 0.9312 (min=0, max=1)
(1,5,6): 0.0688 (min=0, max=1)
(1,5,7): 0.9312 (min=0, max=1)
(2,0,1): 0.04 (min=0, max=1)
(2,0,2): 0.2336 (min=0, max=1)
(2,0,3): 0.7264 (min=0, max=1)
(2,1,3): 0.1968 (min=0, max=1)
(2,1,4): 0.8032 (min=0, max=1)
(2,3,4): 0.1968 (min=0, max=1)
(2,3,5): 0.8032 (min=0, max=1)
(2,4,5): 0.1968 (min=0, max=1)
(2,4,6): 0.8032 (min=0, max=1)
(2,5,6): 0.1968 (min=0, max=1)
(2,5,7): 0.8032 (min=0, max=1)
(3,0,0): 0.016 (min=0, max=1)
(3,0,1): 0.152 (min=0, max=1)
(3,0,2): 0.6 (min=0, max=1)
(3,0,3): 0.232 (min=0, max=1)
(3,1,1): 0.0048 (min=0, max=1)
(3,1,2): 0.0928 (min=0, max=1)
(3,1,3): 0.6416 (min=0, max=1)
(3,1,4): 0.2608 (min=0, max=1)
(3,2,2): 0.0048 (min=0, max=1)
(3,2,3): 0.0928 (min=0, max=1)
(3,2,4): 0.9024 (min=0, max=1)
(3,3,3): 0.0048 (min=0, max=1)
(3,3,4): 0.7344 (min=0, max=1)
(3,3,5): 0.2608 (min=0, max=1)
(3,4,4): 0.0976 (min=0, max=1)
(3,4,5): 0.6416 (min=0, max=1)
(3,4,6): 0.2608 (min=0, max=1)
(3,5,4): 0.0048 (min=0, max=1)
(3,5,5): 0.0928 (min=0, max=1)
(3,5,6): 0.6416 (min=0, max=1)
(3,5,7): 0.2608 (min=0, max=1)
(3,6,5): 0.04 (min=0, max=1)
(3,6,6): 0.36 (min=0, max=1)
(3,6,7): 0.6 (min=0, max=1)
Wed Sep  7 14:40:02 2022


Moral links:

    Marrying PEC_Inf_gL and WWTP_Removal_Scenario
    Marrying Water_Consumption_ML and API_Sales_Weight_kg
    Marrying Year and Population_Scenario


Triangulating prime component with 2 members:
    PEC_SW_gL, RQ
This component is a clique of cost 90

Triangulating prime component with 2 members:
    PEC_SW_gL, PEC_Eff_gL
This component is a clique of cost 90

Triangulating prime component with 3 members:
    PEC_Eff_gL, WWTP_Removal_Scenario, PEC_Inf_gL
This component is a clique of cost 252

Triangulating prime component with 3 members:
    PEC_Inf_gL, API_Sales_Weight_kg, Water_Consumption_ML
This component is a clique of cost 420

Triangulating prime component with 3 members:
    API_Sales_Weight_kg, Water_Consumption_ML, Norway_Population_mil
This component is a clique of cost 360

Triangulating prime component with 3 members:
    Population_Scenario, Year, Norway_Population_mil
This component is a clique of cost 162


Total cost of triangulation for all prime components is 1374


Elimination sequence:

    Year
    Population_Scenario
    Norway_Population_mil
    Water_Consumption_ML
    API_Sales_Weight_kg
    WWTP_Removal_Scenario
    PEC_Inf_gL
    RQ
    PEC_Eff_gL
    PEC_SW_gL


Cliques:

Clique 6, 2 members, table size = 90:
    PEC_SW_gL, PEC_Eff_gL

Clique 5, 2 members, table size = 90:
    PEC_SW_gL, RQ

Clique 4, 3 members, table size = 252:
    PEC_Eff_gL, PEC_Inf_gL, WWTP_Removal_Scenario

Clique 3, 3 members, table size = 420:
    PEC_Inf_gL, API_Sales_Weight_kg, Water_Consumption_ML

Clique 2, 3 members, table size = 360:
    API_Sales_Weight_kg, Water_Consumption_ML, Norway_Population_mil

Clique 1, 3 members, table size = 162:
    Norway_Population_mil, Population_Scenario, Year

Total clique table size: 1374


The junction forest:

Creating junction tree with clique 6 as root ...

Cliques 5 and 6 linked, separator has 1 member and table size = 10:
    PEC_SW_gL

Cliques 4 and 6 linked, separator has 1 member and table size = 9:
    PEC_Eff_gL

Cliques 3 and 4 linked, separator has 1 member and table size = 7:
    PEC_Inf_gL

Cliques 2 and 3 linked, separator has 2 members and table size = 60:
    API_Sales_Weight_kg, Water_Consumption_ML

Cliques 1 and 2 linked, separator has 1 member and table size = 6:
    Norway_Population_mil


Assignment of potentials to cliques:

    Node Population_Scenario assigned to clique 1
    Node PEC_SW_gL assigned to clique 6
    Node PEC_Eff_gL assigned to clique 4
    Node RQ assigned to clique 5
    Node WWTP_Removal_Scenario assigned to clique 4
    Node PEC_Inf_gL assigned to clique 3
    Node API_Sales_Weight_kg assigned to clique 2
    Node Water_Consumption_ML assigned to clique 2
    Node Year assigned to clique 1
    Node Norway_Population_mil assigned to clique 1


Checking conditional probability potentials:

Warning: Conditional distributions for Norway_Population_mil sum to different values:
    min = 1
    max = 2

    No errors found


Beliefs for chance nodes:

    Population_Scenario:
	Low        0.333333
	Main       0.333333
	High       0.333333

    PEC_SW_gL:
	state0   5.94802e-05
	state1   0.00229047
	state2   0.0334901
	state3   0.0771328
	state4   0.887027
	state5   0
	state6   0
	state7   0
	state8   0
	state9   0

    PEC_Eff_gL:
	state0   0
	state1   5.94802e-05
	state2   0.00229047
	state3   0.0334901
	state4   0.96416
	state5   0
	state6   0
	state7   0
	state8   0

    RQ --> #0

    WWTP_Removal_Scenario:
	state0   0.25
	state1   0.25
	state2   0.25
	state3   0.25

    PEC_Inf_gL:
	state0   0
	state1   0.0495668
	state2   0.950433
	state3   0
	state4   0
	state5   0
	state6   0

    API_Sales_Weight_kg:
	state0   0
	state1   0
	state2   0
	state3   0
	state4   0
	state5   0.0103704
	state6   0.98963
	state7   0
	state8   0
	state9   0
	state10   0
	state11   0

    Water_Consumption_ML:
	state0   0
	state1   0.316296
	state2   0.583704
	state3   0.1
	state4   0

    Year:
	state0   0.111111
	state1   0.111111
	state2   0.111111
	state3   0.111111
	state4   0.111111
	state5   0.111111
	state6   0.111111
	state7   0.111111
	state8   0.111111

    Norway_Population_mil:
	state0   0.12963
	state1   0.333333
	state2   0.333333
	state3   0.0740741
	state4   0.0925926
	state5   0.037037


Values for real-valued function nodes:

    API_PNEC_gL: 1

    API_LM_Interc: 1

    API_LM_Coeff: 1
Wed Sep  7 14:41:07 2022


Moral links:

    Marrying PEC_Inf_gL and WWTP_Removal_Scenario
    Marrying Water_Consumption_ML and API_Sales_Weight_kg
    Marrying Year and Population_Scenario


Triangulating prime component with 2 members:
    PEC_SW_gL, RQ
This component is a clique of cost 90

Triangulating prime component with 2 members:
    PEC_SW_gL, PEC_Eff_gL
This component is a clique of cost 90

Triangulating prime component with 3 members:
    PEC_Eff_gL, WWTP_Removal_Scenario, PEC_Inf_gL
This component is a clique of cost 252

Triangulating prime component with 3 members:
    PEC_Inf_gL, API_Sales_Weight_kg, Water_Consumption_ML
This component is a clique of cost 420

Triangulating prime component with 3 members:
    API_Sales_Weight_kg, Water_Consumption_ML, Norway_Population_mil
This component is a clique of cost 360

Triangulating prime component with 3 members:
    Population_Scenario, Year, Norway_Population_mil
This component is a clique of cost 162


Total cost of triangulation for all prime components is 1374


Elimination sequence:

    Year
    Population_Scenario
    Norway_Population_mil
    Water_Consumption_ML
    API_Sales_Weight_kg
    WWTP_Removal_Scenario
    PEC_Inf_gL
    RQ
    PEC_Eff_gL
    PEC_SW_gL


Cliques:

Clique 6, 2 members, table size = 90:
    PEC_SW_gL, PEC_Eff_gL

Clique 5, 2 members, table size = 90:
    PEC_SW_gL, RQ

Clique 4, 3 members, table size = 252:
    PEC_Eff_gL, PEC_Inf_gL, WWTP_Removal_Scenario

Clique 3, 3 members, table size = 420:
    PEC_Inf_gL, API_Sales_Weight_kg, Water_Consumption_ML

Clique 2, 3 members, table size = 360:
    API_Sales_Weight_kg, Water_Consumption_ML, Norway_Population_mil

Clique 1, 3 members, table size = 162:
    Norway_Population_mil, Population_Scenario, Year

Total clique table size: 1374


The junction forest:

Creating junction tree with clique 6 as root ...

Cliques 5 and 6 linked, separator has 1 member and table size = 10:
    PEC_SW_gL

Cliques 4 and 6 linked, separator has 1 member and table size = 9:
    PEC_Eff_gL

Cliques 3 and 4 linked, separator has 1 member and table size = 7:
    PEC_Inf_gL

Cliques 2 and 3 linked, separator has 2 members and table size = 60:
    API_Sales_Weight_kg, Water_Consumption_ML

Cliques 1 and 2 linked, separator has 1 member and table size = 6:
    Norway_Population_mil


Assignment of potentials to cliques:

    Node Population_Scenario assigned to clique 1
    Node PEC_SW_gL assigned to clique 6
    Node PEC_Eff_gL assigned to clique 4
    Node RQ assigned to clique 5
    Node WWTP_Removal_Scenario assigned to clique 4
    Node PEC_Inf_gL assigned to clique 3
    Node API_Sales_Weight_kg assigned to clique 2
    Node Water_Consumption_ML assigned to clique 2
    Node Year assigned to clique 1
    Node Norway_Population_mil assigned to clique 1


Checking conditional probability potentials:

Warning: Conditional distributions for Norway_Population_mil sum to different values:
    min = 1
    max = 2

    No errors found


Beliefs for chance nodes:

    Population_Scenario:
	Low        0.333333
	Main       0.333333
	High       0.333333

    PEC_SW_gL:
	state0   5.94802e-05
	state1   0.00229047
	state2   0.0334901
	state3   0.0771328
	state4   0.887027
	state5   0
	state6   0
	state7   0
	state8   0
	state9   0

    PEC_Eff_gL:
	state0   0
	state1   5.94802e-05
	state2   0.00229047
	state3   0.0334901
	state4   0.96416
	state5   0
	state6   0
	state7   0
	state8   0

    RQ --> #0

    WWTP_Removal_Scenario:
	state0   0.25
	state1   0.25
	state2   0.25
	state3   0.25

    PEC_Inf_gL:
	state0   0
	state1   0.0495668
	state2   0.950433
	state3   0
	state4   0
	state5   0
	state6   0

    API_Sales_Weight_kg:
	state0   0
	state1   0
	state2   0
	state3   0
	state4   0
	state5   0.0103704
	state6   0.98963
	state7   0
	state8   0
	state9   0
	state10   0
	state11   0

    Water_Consumption_ML:
	state0   0
	state1   0.316296
	state2   0.583704
	state3   0.1
	state4   0

    Year:
	state0   0.111111
	state1   0.111111
	state2   0.111111
	state3   0.111111
	state4   0.111111
	state5   0.111111
	state6   0.111111
	state7   0.111111
	state8   0.111111

    Norway_Population_mil:
	state0   0.12963
	state1   0.333333
	state2   0.333333
	state3   0.0740741
	state4   0.0925926
	state5   0.037037


Values for real-valued function nodes:

    API_PNEC_gL: 1

    API_LM_Interc: 1

    API_LM_Coeff: 1
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,6): 0.6 (min=0, max=1)
(3,7): 0.4 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.36 (min=0, max=1)
(0,5): 0.64 (min=0, max=1)
(1,5): 0.8 (min=0, max=1)
(1,6): 0.2 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.68 (min=0, max=1)
(0,4): 0.24 (min=0, max=1)
(1,4): 0.76 (min=0, max=1)
(1,5): 0.24 (min=0, max=1)
(2,5): 0.76 (min=0, max=1)
(2,6): 0.24 (min=0, max=1)
(3,6): 0.76 (min=0, max=1)
(3,7): 0.24 (min=0, max=1)
(4,7): 0.76 (min=0, max=1)
(4,8): 0.24 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(1,5): 0.12 (min=0, max=1)
(1,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,2): 0.08 (min=0, max=1)
(0,3): 0.24 (min=0, max=1)
(0,4): 0.68 (min=0, max=1)
(1,4): 0.28 (min=0, max=1)
(1,5): 0.72 (min=0, max=1)
(5,5): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,3): 0.04 (min=0, max=1)
(0,4): 0.44 (min=0, max=1)
(0,5): 0.52 (min=0, max=1)
(1,5): 0.44 (min=0, max=1)
(1,6): 0.56 (min=0, max=1)
(2,6): 0.44 (min=0, max=1)
(2,7): 0.56 (min=0, max=1)
(3,7): 0.44 (min=0, max=1)
(3,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,4): 0.4 (min=0, max=1)
(0,5): 0.6 (min=0, max=1)
(2,5): 0.52 (min=0, max=1)
(2,6): 0.48 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,2): 0.04 (min=0, max=1)
(0,3): 0.44 (min=0, max=1)
(0,4): 0.52 (min=0, max=1)
(1,4): 0.44 (min=0, max=1)
(1,5): 0.56 (min=0, max=1)
(2,5): 0.44 (min=0, max=1)
(2,6): 0.56 (min=0, max=1)
(3,6): 0.44 (min=0, max=1)
(3,7): 0.56 (min=0, max=1)
(4,7): 0.44 (min=0, max=1)
(4,8): 0.56 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -20.9956
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(3,1): 0.12 (min=0, max=1)
(3,2): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -0.489604
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,6): 0.32 (min=0, max=1)
(0,7): 0.68 (min=0, max=1)
(2,7): 0.24 (min=0, max=1)
(2,8): 0.76 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,1): 0.08 (min=0, max=1)
(0,2): 0.92 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(4,2): 0.56 (min=0, max=1)
(4,3): 0.44 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(2,9): 0.28 (min=0, max=1)
(2,10): 0.72 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,7): 0.2 (min=0, max=1)
(0,8): 0.8 (min=0, max=1)
(1,8): 0.36 (min=0, max=1)
(1,9): 0.64 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,0): 0.08 (min=0, max=1)
(0,1): 0.84 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(1,2): 0.92 (min=0, max=1)
(1,3): 0.08 (min=0, max=1)
(2,3): 0.92 (min=0, max=1)
(2,4): 0.08 (min=0, max=1)
(3,4): 0.92 (min=0, max=1)
(3,5): 0.08 (min=0, max=1)
(4,5): 0.92 (min=0, max=1)
(4,6): 0.08 (min=0, max=1)
(5,6): 0.92 (min=0, max=1)
(5,7): 0.08 (min=0, max=1)
(6,7): 0.92 (min=0, max=1)
(6,8): 0.08 (min=0, max=1)
Using model for RQ to generate a conditional probability table
(0,6): 0.08 (min=0, max=1)
(0,7): 0.92 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -3.13647
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.12 (min=0, max=1)
(0,6): 0.88 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,1): 0.92 (min=0, max=1)
(0,2): 0.08 (min=0, max=1)
(5,2): 0.72 (min=0, max=1)
(5,3): 0.28 (min=0, max=1)
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -29.1828
Using model for API_Sales_Weight_kg to generate a conditional probability table
Value for node API_Sales_Weight_kg is out of bounds: -29.1828
Using model for API_Sales_Weight_kg to generate a conditional probability table
(0,5): 0.08 (min=0, max=1)
(0,6): 0.92 (min=0, max=1)
