wwt_share_by_county_2020_disc %>%
group_by(Class_EU) %>%
summarise(sum(population), Class_EU) %>%
summarise(`sum(population)` / sum(`sum(population)`))
wwt_share_by_county_2020_disc %>%
group_by(Class_EU) %>%
summarise(sum(population))
wwt_share_by_county_2020_disc %>%
group_by(Class_EU) %>%
summarise(sum(population)) %>%
group_by(Class_EU) %>%
summarise(`sum(population)` / sum(`sum(population)`))
# total for Norway
wwt_share_by_county_2020_disc %>%
group_by(Class_EU) %>%
summarise(sum(population)) %>%
summarise(`sum(population)` / sum(`sum(population)`))
wwt_share_by_county_2020_disc %>%
group_by(Class_EU) %>%
summarise(sum(population))
wwt_share_by_county_2020 %>% summarise(sum(population))
wwt_share_by_county_2020 %>% ungroup() %>% summarise(sum(population))
wwtp_by_county_2020 <- large_wwtp_by_county_2020 %>%
pivot_longer(cols = 1:7, names_to = "treatment", values_to = "population") %>%
mutate(size = "large") %>%
add_row(
small_wwtp_by_county_2020 %>%
pivot_longer(cols = 1:15, names_to = "treatment", values_to = "population") %>%
mutate(size = "small")
) %>%
left_join(WWT_definitions_Norway %>% select(Name_EN, Class_EU), by = c("treatment" = "Name_EN"))
View(small_wwtp_by_county_2020)
small_wwtp_by_county_2020 %>% summarise(sum(total))
large_wwtp_by_county_2020 %>% summarise(sum(total))
wwt_share_by_county_2020 %>% summarise(sum(population))
wwt_share_by_county_2020 %>% ungroup() %>%  summarise(sum(population))
wwt_share_by_county_2020 <-
wwtp_by_county_2020 %>%
filter(treatment != "total") %>%
group_by(County_Name, Class_EU) %>%
summarise(County_Name,
County_Code,
population = sum(population, na.rm = TRUE)) %>%
distinct() %>%
ungroup() %>%
group_by(County_Name) %>%
mutate(wwt_pop_share = round(population / sum(population), digits = 2))
wwtp_by_county_2020
View(wwtp_by_county_2020)
wwtp_by_county_2020 <- large_wwtp_by_county_2020 %>%
pivot_longer(cols = 1:7, names_to = "treatment", values_to = "population") %>%
mutate(size = "large")
wwtp_by_county_2020 <- large_wwtp_by_county_2020 %>%
pivot_longer(cols = 1:7, names_to = "treatment", values_to = "population") %>%
mutate(size = "large") %>%
add_row(
small_wwtp_by_county_2020 %>%
pivot_longer(cols = 1:15, names_to = "treatment", values_to = "population") %>%
mutate(size = "small")
)
wwtp_by_county_2020 <- large_wwtp_by_county_2020 %>%
pivot_longer(cols = 1:7, names_to = "treatment", values_to = "population") %>%
mutate(size = "large") %>%
add_row(
small_wwtp_by_county_2020 %>%
pivot_longer(cols = 1:15, names_to = "treatment", values_to = "population") %>%
mutate(size = "small")
) %>%
left_join(WWT_definitions_Norway %>% select(Name_EN, Class_EU), by = c("treatment" = "Name_EN"))
WWT_definitions_Norway
wwtp_by_county_2020 <- large_wwtp_by_county_2020 %>%
pivot_longer(cols = 1:7, names_to = "treatment", values_to = "population") %>%
mutate(size = "large") %>%
left_join(WWT_definitions_Norway %>% select(Name_EN, Class_EU), by = c("treatment" = "Name_EN")) %>%
add_row(
small_wwtp_by_county_2020 %>%
pivot_longer(cols = 1:15, names_to = "treatment", values_to = "population") %>%
mutate(size = "small") %>%
left_join(WWT_definitions_Norway %>% select(Name_EN, Class_EU), by = c("treatment" = "Name_EN")
)
)
View(wwtp_by_county_2020)
wwtp_by_county_2020 <- large_wwtp_by_county_2020 %>%
pivot_longer(cols = 1:7, names_to = "treatment", values_to = "population") %>%
mutate(size = "large") %>%
add_row(
small_wwtp_by_county_2020 %>%
pivot_longer(cols = 1:15, names_to = "treatment", values_to = "population") %>%
mutate(size = "small")
) %>%
left_join(WWT_definitions_Norway %>% select(Name_EN, Class_EU), by = c("treatment" = "Name_EN")) %>%
distinct()
wwt_share_by_county_2020 %>% ungroup() %>%  summarise(sum(population))
# Merge data for access to large and small WWTP in Norway 2020, by county
# Convert Norwegian names to English/EU classes, based on WWT_definitions_Norway
wwtp_by_county_2020 <- large_wwtp_by_county_2020 %>%
pivot_longer(cols = 1:7, names_to = "treatment", values_to = "population") %>%
mutate(size = "large") %>%
add_row(
small_wwtp_by_county_2020 %>%
pivot_longer(cols = 1:15, names_to = "treatment", values_to = "population") %>%
mutate(size = "small")
) %>%
left_join(WWT_definitions_Norway %>% select(Name_EN, Class_EU), by = c("treatment" = "Name_EN")) %>%
# This double counts for some reason
distinct()
# How well do WWTP numbers and actual populations add up?
wwtp_by_county_2020 %>%
filter(treatment == "total") %>%
group_by(County_Name) %>%
summarise(sum(population), County_Code) %>%
distinct() %>%
left_join(y = pop_by_county_2020, by = "County_Code") %>%
summarise(`sum(population)` / Population)
# Pretty close, +- 5%, except for Troms & Finnmark, which is 15% higher than actual pop
# In any case, we can now characterise the proportions of different treatment levels in each County
wwt_share_by_county_2020 <-
wwtp_by_county_2020 %>%
filter(treatment != "total") %>%
group_by(County_Name, Class_EU) %>%
summarise(County_Name,
County_Code,
population = sum(population, na.rm = TRUE)) %>%
distinct() %>%
ungroup() %>%
group_by(County_Name) %>%
mutate(wwt_pop_share = round(population / sum(population), digits = 2))
# Slight issue here
wwt_share_by_county_2020 %>% ungroup() %>%  summarise(sum(population))
# This population adds up to ~9 million...
View(wwt_share_by_county_2020_disc)
View(wwt_share_by_county_2020)
# Summarise share of total population and WWTP class access by county (2020)
source(file = "src/data_processing/pop_share_county.R")
source(file = "src/data_processing/WWTP_share_county.R")
# Disc of WWTP share:
wwt_share_by_county_2020_disc <- wwt_share_by_county_2020 %>%
mutate(wwt_pop_share_disc = plyr::round_any(wwt_pop_share, 0.25, f = round))
# Check percentages = 100%
wwt_share_by_county_2020_disc %>% group_by(County_Name) %>%
summarise(sum(wwt_pop_share_disc))
# total for Norway
wwt_share_by_county_2020_disc %>%
group_by(Class_EU) %>%
summarise(sum(population)) %>%
summarise(`sum(population)` / sum(`sum(population)`))
# Scenarios:
# Compliance: all secondary?
# Upgrade: all tertiary
wwt_share_by_county_2020_disc %>% summarise(sum(population))
wwt_share_by_county_2020_disc %>% ungroup() %>%  summarise(sum(population))
wwt_share_by_county_2020_disc %>%
group_by(Class_EU) %>%
summarise(sum(population)) %>%
summarise(`sum(population)` / sum(`sum(population)`))
levels(wwt_share_by_county_2020_disc$Class_EU)
levels(wwt_share_by_county_2020_disc$Class_EU)
?levels
wwt_share_by_county_2020_disc$Class_EU
get_all_vars(wwt_share_by_county_2020_disc$Class_EU)
wwt_share_by_county_2020_disc$Class_EU %>% unique()
test <- wwt_share_by_county_2020_disc$Class_EU %>% unique()
for (v in length(wwt_share_by_county_2020_disc$Class_EU %>% unique())) {
(wwt_share_by_county_2020_disc$Class_EU %>% unique())[v] %>% print()
}
ength(wwt_share_by_county_2020_disc$Class_EU %>% unique())
length(wwt_share_by_county_2020_disc$Class_EU %>% unique())
wwt_share_by_county_2020_disc$Class_EU %>% unique())[v]
(wwt_share_by_county_2020_disc$Class_EU %>% unique())[v]
for (v in 1:length(wwt_share_by_county_2020_disc$Class_EU %>% unique())) {
(wwt_share_by_county_2020_disc$Class_EU %>% unique())[v] %>% print()
}
?glue
temp_WWT_level <- (wwt_share_by_county_2020_disc$Class_EU %>% unique())[v]
print(temp_WWT_level)
temp_CPT_name <- glue("{name}_WWT_CTP", temp_WWT_level)
for (v in 1:length(wwt_share_by_county_2020_disc$Class_EU %>% unique())) {
temp_WWT_level <- (wwt_share_by_county_2020_disc$Class_EU %>% unique())[v]
print(temp_WWT_level)
temp_CPT_name <- glue("{temp_WWT_level}_WWT_CTP", temp_WWT_level)
}
for (v in 1:length(wwt_share_by_county_2020_disc$Class_EU %>% unique())) {
temp_WWT_level <- (wwt_share_by_county_2020_disc$Class_EU %>% unique())[v]
print(temp_WWT_level)
temp_CPT_name <- glue("{temp_WWT_level}_WWT_CTP", temp_WWT_level)
wwt_share_by_county_2020_disc %>% filter(Class_EU := temp_WWT_level)
}
for (v in 1:length(wwt_share_by_county_2020_disc$Class_EU %>% unique())) {
temp_WWT_level <- (wwt_share_by_county_2020_disc$Class_EU %>% unique())[v]
print(temp_WWT_level)
temp_CPT_name <- glue("{temp_WWT_level}_WWT_CTP", temp_WWT_level)
wwt_share_by_county_2020_disc %>% filter(Class_EU == temp_WWT_level)
}
for (v in 1:length(wwt_share_by_county_2020_disc$Class_EU %>% unique())) {
temp_WWT_level <- (wwt_share_by_county_2020_disc$Class_EU %>% unique())[v]
print(temp_WWT_level)
temp_CPT_name <- glue("{temp_WWT_level}_WWT_CTP", temp_WWT_level)
wwt_share_by_county_2020_disc %>% filter(Class_EU == temp_WWT_level)
wwt_share_by_county_2020_disc
}
wwt_share_by_county_2020_disc %>% filter(Class_EU == temp_WWT_level)
wwt_share_by_county_2020_disc %>% filter(Class_EU == temp_WWT_level) %>%
select(County_Name, wwt_pop_share_disc)
pivot_wider(names_from = wwt_pop_share_disc)
wwt_share_by_county_2020_disc %>% filter(Class_EU == temp_WWT_level) %>%
select(County_Name, wwt_pop_share_disc) %>%
pivot_wider(names_from = wwt_pop_share_disc)
wwt_share_by_county_2020_disc %>% filter(Class_EU == temp_WWT_level) %>%
select(County_Name, wwt_pop_share_disc) %>%
pivot_wider(names_from = wwt_pop_share_disc, values_from = County_Name)
wwt_share_by_county_2020_disc %>% filter(Class_EU == temp_WWT_level) %>%
select(County_Name, wwt_pop_share_disc)
wwt_share_by_county_2020_disc %>% filter(Class_EU == temp_WWT_level) %>%
select(County_Name, wwt_pop_share_disc) %>%
crossing(Scenario = c("Current", "Compliance", "Upgrade"))
View(pop_share_by_county_2020)
View(wwt_share_by_county_2020_disc)
wwt_share_by_county_2020_disc %>% group_by(Class_EU) %>% summarise(n_distinct(wwt_pop_share_disc))
WWT_level_states <- wwt_share_by_county_2020_disc %>%
group_by(Class_EU) %>%
summarise(n_distinct(wwt_pop_share_disc))
WWT_level_states
WWT_level_states <- wwt_share_by_county_2020_disc %>%
group_by(Class_EU) %>%
summarise(n_distinct(wwt_pop_share_disc)) %>%
mutate(states = c(0, 0.25, 0.5, 0.75, 1))
WWT_level_states <- wwt_share_by_county_2020_disc %>%
group_by(Class_EU) %>%
summarise(n_distinct(wwt_pop_share_disc)) %>%
crossing(states = c(0, 0.25, 0.5, 0.75, 1))
WWT_level_states
WWT_level_states <- wwt_share_by_county_2020_disc %>%
group_by(Class_EU) %>%
summarise(n_states = n_distinct(wwt_pop_share_disc)) %>%
crossing(states = c(0, 0.25, 0.5, 0.75, 1)[n_states])
WWT_level_states
WWT_level_states <- wwt_share_by_county_2020_disc %>%
group_by(Class_EU) %>%
summarise(n_states = case_when(Class_EU == "tertiary" ~ n_distinct(wwt_pop_share_disc) + 1,
TRUE ~ n_distinct(wwt_pop_share_disc))) %>%
crossing(states = c(0, 0.25, 0.5, 0.75, 1)[n_states])
WWT_level_states <- wwt_share_by_county_2020_disc %>%
group_by(Class_EU) %>%
summarise(n_states = case_when(Class_EU == "tertiary" ~ (n_distinct(wwt_pop_share_disc) + 1),
.TRUE ~ n_distinct(wwt_pop_share_disc))) %>%
crossing(states = c(0, 0.25, 0.5, 0.75, 1)[n_states])
WWT_level_states <- wwt_share_by_county_2020_disc %>%
group_by(Class_EU) %>%
summarise(n_states = case_when(Class_EU == "tertiary" ~ 5),
TRUE ~ n_distinct(wwt_pop_share_disc)) %>%
crossing(states = c(0, 0.25, 0.5, 0.75, 1)[n_states])
n_distinct(wwt_pop_share_disc)
# How many states should each node have? What values do these states have
WWT_level_states <- wwt_share_by_county_2020_disc %>%
group_by(Class_EU) %>%
summarise(n_states = n_distinct(wwt_pop_share_disc)) %>%
crossing(states = c(0, 0.25, 0.5, 0.75, 1)[n_states])
# This omits some in-between levels (e.g there's no 0.75 for tertiary, but it shouldn't be a problem?)
WWT_level_states
WWT_level_states %>% filter(Class_EU == temp_WWT_level)
WWT_level_states %>% filter(Class_EU == temp_WWT_level) %>% [states]
WWT_level_states %>% filter(Class_EU == temp_WWT_level) %>% $states
WWT_level_states %>% filter(Class_EU == temp_WWT_level) %>% select(states)
WWT_level_states %>% filter(Class_EU == temp_WWT_level) %>% select(states) %>% unnest()
WWT_level_states %>% filter(Class_EU == temp_WWT_level) %>% select(states) %>% pull
wwt_share_by_county_2020_disc %>% filter(Class_EU == temp_WWT_level) %>%
select(County_Name, wwt_pop_share_disc) %>%
crossing(Scenario = c("Current", "Compliance", "Upgrade"),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
filter(Class_EU == temp_WWT_level) %>%
select(states) %>%
pull())
?equals()
wwt_share_by_county_2020_disc %>% filter(Class_EU == temp_WWT_level) %>%
select(County_Name, wwt_pop_share_disc) %>%
crossing(Scenario = c("Current", "Compliance", "Upgrade"),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
filter(Class_EU == temp_WWT_level) %>%
select(states) %>%
pull()) %>%
mutate(present = equals(wwt_pop_share_disc, value))
wwt_share_by_county_2020_disc %>% filter(Class_EU == temp_WWT_level) %>%
select(County_Name, wwt_pop_share_disc) %>%
crossing(Scenario = c("Current", "Compliance", "Upgrade"),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
filter(Class_EU == temp_WWT_level) %>%
select(states) %>%
pull()) %>%
mutate(present = wwt_pop_share_disc == value))
wwt_share_by_county_2020_disc %>% filter(Class_EU == temp_WWT_level) %>%
select(County_Name, wwt_pop_share_disc) %>%
crossing(Scenario = c("Current", "Compliance", "Upgrade"),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
filter(Class_EU == temp_WWT_level) %>%
select(states) %>%
pull()) %>%
mutate(present = (wwt_pop_share_disc == value))
wwt_share_by_county_2020_disc %>% filter(Class_EU == temp_WWT_level) %>%
select(County_Name, wwt_pop_share_disc) %>%
crossing(Scenario = c("Current", "Compliance", "Upgrade"),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
filter(Class_EU == temp_WWT_level) %>%
select(states) %>%
pull()) %>%
mutate(present = (wwt_pop_share_disc == Value))
wwt_share_by_county_2020_disc %>% filter(Class_EU == temp_WWT_level) %>%
select(County_Name, wwt_pop_share_disc) %>%
crossing(Scenario = c("Current", "Compliance", "Upgrade"),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
filter(Class_EU == temp_WWT_level) %>%
select(states) %>%
pull()) %>%
mutate(present = as.numeric(wwt_pop_share_disc == Value))
for (v in 1:length(wwt_share_by_county_2020_disc$Class_EU %>% unique())) {
temp_WWT_level <- (wwt_share_by_county_2020_disc$Class_EU %>% unique())[v]
print(temp_WWT_level)
temp_CPT_name <- glue("{temp_WWT_level}_WWT_CTP", temp_WWT_level)
wwt_share_by_county_2020_disc %>% filter(Class_EU == temp_WWT_level) %>%
select(County_Name, wwt_pop_share_disc) %>%
crossing(Scenario = c("Current", "Compliance", "Upgrade"),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
filter(Class_EU == temp_WWT_level) %>%
select(states) %>%
pull()) %>%
# Set levels if scenario = Compliance (all 2+) or Upgrade (all 3+)
mutate(present = as.numeric(wwt_pop_share_disc == Value))
}
v = 1
temp_WWT_level <- (wwt_share_by_county_2020_disc$Class_EU %>% unique())[v]
print(temp_WWT_level)
temp_CPT_name <- glue("{temp_WWT_level}_WWT_CTP", temp_WWT_level)
wwt_share_by_county_2020_disc %>% filter(Class_EU == temp_WWT_level) %>%
select(County_Name, wwt_pop_share_disc) %>%
crossing(Scenario = c("Current", "Compliance", "Upgrade"),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
filter(Class_EU == temp_WWT_level) %>%
select(states) %>%
pull())
temp <- "Compliance"
temp <-     temp_WWT_level <- (wwt_share_by_county_2020_disc$Class_EU %>% unique())[v]
print(temp_WWT_level)
temp_CPT_name <- glue("{temp_WWT_level}_WWT_CTP", temp_WWT_level)
wwt_share_by_county_2020_disc %>% filter(Class_EU == temp_WWT_level) %>%
select(County_Name, wwt_pop_share_disc) %>%
crossing(Scenario = c("Current", "Compliance", "Upgrade"),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
filter(Class_EU == temp_WWT_level) %>%
select(states) %>%
pull())
temp <-     temp_WWT_level <- (wwt_share_by_county_2020_disc$Class_EU %>% unique())[v]
print(temp_WWT_level)
temp_CPT_name <- glue("{temp_WWT_level}_WWT_CTP", temp_WWT_level)
wwt_share_by_county_2020_disc %>% filter(Class_EU == temp_WWT_level) %>%
select(County_Name, wwt_pop_share_disc) %>%
crossing(Scenario = c("Current", "Compliance", "Upgrade"),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
filter(Class_EU == temp_WWT_level) %>%
select(states) %>%
pull())
test_df <-     temp_WWT_level <- (wwt_share_by_county_2020_disc$Class_EU %>% unique())[v]
print(temp_WWT_level)
temp_CPT_name <- glue("{temp_WWT_level}_WWT_CTP", temp_WWT_level)
wwt_share_by_county_2020_disc %>% filter(Class_EU == temp_WWT_level) %>%
select(County_Name, wwt_pop_share_disc) %>%
crossing(Scenario = c("Current", "Compliance", "Upgrade"),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
filter(Class_EU == temp_WWT_level) %>%
select(states) %>%
pull())
temp <-     wwt_share_by_county_2020_disc %>% filter(Class_EU == temp_WWT_level) %>%
select(County_Name, wwt_pop_share_disc) %>%
crossing(Scenario = c("Current", "Compliance", "Upgrade"),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
filter(Class_EU == temp_WWT_level) %>%
select(states) %>%
pull())
View(temp)
temp <-     wwt_share_by_county_2020_disc %>% filter(Class_EU == temp_WWT_level) %>%
select(County_Name, wwt_pop_share_disc) %>%
crossing(Scenario = c("Current", "Compliance", "Upgrade"),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
filter(Class_EU == temp_WWT_level) %>%
select(states) %>%
pull()) %>%
mutate(present = as.numeric(wwt_pop_share_disc == Value))
temp <- arrange(... = County, Scenario)
temp <- arrange(... = County)
temp <- arrange(... = "County")
temp <- arrange(County)
temp <- arrange(County_Name)
temp %>%  arrange(County_Name)
temp <- wwt_share_by_county_2020_disc %>%
select(County_Name, wwt_pop_share_disc) %>%
crossing(Scenario = c("Current", "Compliance", "Upgrade"),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
filter(Class_EU == temp_WWT_level) %>%
select(states) %>%
pull()) %>%
mutate(present = as.numeric(wwt_pop_share_disc == Value))
temp <-     wwt_share_by_county_2020_disc %>%
select(County_Name, wwt_pop_share_disc, Class_EU) %>%
crossing(Scenario = c("Current", "Compliance", "Upgrade"),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
filter(Class_EU == temp_WWT_level) %>%
select(states) %>%
pull()) %>%
mutate(present = as.numeric(wwt_pop_share_disc == Value))
wwt_share_by_county_2020_disc %>%
select(County_Name, wwt_pop_share_disc, Class_EU) %>%
crossing(Scenario = c("Current", "Compliance", "Upgrade"),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
select(states) %>%
pull()) %>%
mutate(present = as.numeric(wwt_pop_share_disc == Value))
temp <- wwt_share_by_county_2020_disc %>%
select(County_Name, wwt_pop_share_disc, Class_EU) %>%
crossing(Scenario = c("Current", "Compliance", "Upgrade"),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
select(states) %>%
pull()) %>%
mutate(present = as.numeric(wwt_pop_share_disc == Value))
temp <- wwt_share_by_county_2020_disc %>%
select(County_Name, wwt_pop_share_disc, Class_EU) %>%
crossing(Scenario = c("Current", "Compliance", "Upgrade"),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
select(states) %>%
pull()) %>%
mutate(present = as.numeric(wwt_pop_share_disc == Value)) %>%
arrange(Class_EU, County_Name, Scenario)
temp <- wwt_share_by_county_2020_disc %>%
select(County_Name, wwt_pop_share_disc, Class_EU) %>%
crossing(Scenario = c("Current", "Compliance", "Upgrade"),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
select(states) %>%
pull()) %>%
mutate(present = as.numeric(wwt_pop_share_disc == Value)) %>%
arrange(Class_EU, County_Name, Scenario) %>%
pivot_wider(names_from = c("County_Name", "Scenario"), values_from = "Present")
temp <- wwt_share_by_county_2020_disc %>%
select(County_Name, wwt_pop_share_disc, Class_EU) %>%
crossing(Scenario = c("Current", "Compliance", "Upgrade"),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
select(states) %>%
pull()) %>%
mutate(present = as.numeric(wwt_pop_share_disc == Value)) %>%
arrange(Class_EU, County_Name, Scenario) %>%
pivot_wider(names_from = c("County_Name", "Scenario"), values_from = Present)
temp <- wwt_share_by_county_2020_disc %>%
select(County_Name, wwt_pop_share_disc, Class_EU) %>%
crossing(Scenario = c("Current", "Compliance", "Upgrade"),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
select(states) %>%
pull()) %>%
mutate(present = as.numeric(wwt_pop_share_disc == Value)) %>%
arrange(Class_EU, County_Name, Scenario) %>%
pivot_wider(names_from = c("County_Name", "Scenario"), values_from = present)
?crossing
temp <- wwt_share_by_county_2020_disc %>%
select(County_Name, wwt_pop_share_disc, Class_EU) %>%
crossing(Scenario = as.factor(c("Current", "Compliance", "Upgrade")),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
select(states) %>%
pull()) %>%
mutate(present = as.numeric(wwt_pop_share_disc == Value)) %>%
arrange(Class_EU, County_Name, Scenario) %>%
pivot_wider(names_from = c("County_Name", "Scenario"), values_from = present)
temp <- wwt_share_by_county_2020_disc %>%
select(County_Name, wwt_pop_share_disc, Class_EU) %>%
# YAH: Make vector into a factor/preserve level order
crossing(Scenario = factor("Current", "Compliance", "Upgrade"),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
select(states) %>%
pull()) %>%
mutate(present = as.numeric(wwt_pop_share_disc == Value)) %>%
arrange(Class_EU, County_Name, Scenario) %>%
pivot_wider(names_from = c("County_Name", "Scenario"), values_from = present)
factor("Current", "Compliance", "Upgrade")
?factor()
temp <- wwt_share_by_county_2020_disc %>%
select(County_Name, wwt_pop_share_disc, Class_EU) %>%
# YAH: Make vector into a factor/preserve level order
crossing(Scenario = factor(levels = c("Current", "Compliance", "Upgrade")),
# use the WWT_level_states we set earlier to cross w/ relevant levels
Value = WWT_level_states %>%
select(states) %>%
pull()) %>%
mutate(present = as.numeric(wwt_pop_share_disc == Value)) %>%
arrange(Class_EU, County_Name, Scenario) %>%
pivot_wider(names_from = c("County_Name", "Scenario"), values_from = present)
