width = 21, height = 24, units = "cm")
source(file = "src/graphics/WWTP_RQ_bars.R")
WWTP_RQ_bars <- Hugin_Data_Output_Tall_Labelled %>%
filter(API_Name %notin% c("Estrogens", "Painkillers"),
Risk_Bin %notin% c("true", "false",
PGT_Threshold == 100),
Year_and_Population_Growth == "2050 & Main") %>%
ggplot(aes(x = WWT_Scenario, y = Probability, fill = Risk_Bin)) +
geom_col() +
scale_fill_brewer(palette = "Spectral", name = "RQ Interval", direction = -1) +
facet_grid(rows = vars(API_Name),
cols = vars(county)) +
labs(x = "WWT Scenario (2050)") +
theme_bw()
WWTP_RQ_bars
WWTP_RQ_bars <- Hugin_Data_Output_Tall_Labelled %>%
filter(API_Name %notin% c("Estrogens", "Painkillers"),
Risk_Bin %notin% c("true", "false",
PGT_Threshold == 100),
Year_and_Population_Growth == "2050 & Main") %>%
ggplot(aes(x = WWT_Scenario, y = Probability, fill = Risk_Bin)) +
geom_col() +
scale_fill_brewer(palette = "Spectral", name = "RQ Interval", direction = -1) +
scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
facet_grid(rows = vars(API_Name),
cols = vars(county)) +
labs(x = "WWT Scenario (2050)") +
theme_bw()
WWTP_RQ_bars
WWTP_RQ_bars <- Hugin_Data_Output_Tall_Labelled %>%
filter(API_Name %notin% c("Estrogens", "Painkillers"),
Risk_Bin %notin% c("true", "false"),
PGT_Threshold == 100,
Year_and_Population_Growth == "2050 & Main") %>%
ggplot(aes(x = WWT_Scenario, y = Probability, fill = Risk_Bin)) +
geom_col() +
scale_fill_brewer(palette = "Spectral", name = "RQ Interval", direction = -1) +
scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
facet_grid(rows = vars(API_Name),
cols = vars(county)) +
labs(x = "WWT Scenario (2050)") +
theme_bw()
WWTP_RQ_bars
## Figure 06 ##
source(file = "src/graphics/WWTP_RQ_bars.R")
WWTP_RQ_bars
ggsave(filename = "output/images/ready/figure06_wwtp_scenario_RQ.png", device = "png",
width = 21, height = 24, units = "cm")
WWTP_RQ_bars
# Hugin has done its thing, so let's import the data
Hugin_Data_Output <- read_csv(file = "Data/Hugin/Hugin_to_R_datafile.csv",
show_col_types = FALSE)
# # Note the threshold used
# Hugin_Threshhold <-  unique(Hugin_Data_Output$PRQ_threshold)
# Hugin's many output interval columns need pivoting to tall data
# YAH: Something is fucked in the API_Name case when. Dropping for now so I can focus on other things...
Hugin_Data_Output_Tall <- Hugin_Data_Output %>%
select(-c(2:7)) %>%
pivot_longer(cols = 3:62,
names_to = "Risk_Bin_String",
values_to = "Probability") %>%
mutate(Risk_Type = str_remove(Risk_Bin_String, pattern = "_[^_]+$") %>%
str_remove(pattern = "P\\("),
API_Name = case_when(Risk_Type == "PRQ_GT_n" ~ str_extract(Risk_Bin_String,
pattern = "GT_n_[0-9]"),
TRUE ~ str_extract(Risk_Bin_String,
pattern = "(?<=\\_)([[:alpha:]]*?)(?=\\=)"))) %>%
mutate(Risk_Bin = str_extract(Risk_Bin_String, pattern = "(?<==).[a-zA-Z0-9-]+"),
API_Name = fct_relevel(API_Name, c("estradiol", "ethinylestradiol", "ciprofloxacin",
"diclofenac", "ibuprofen", "paracetamol",
"Estrogens", "Painkillers", "AllAPI",
"GT_n_1", "GT_n_2", "GT_n_3",
"GT_n_4", "GT_n_5", "GT_n_6"))) %>%
select(-Risk_Bin_String) %>%
relocate(Probability, .after = last_col()) %>%
mutate(API_Name = case_when(API_Name == "AllAPI" ~ "ΣRQ",
TRUE ~ API_Name))
rlang::last_error()
x <- "Σ"
x
Hugin_Data_Output_Tall
# YAH: Something is fucked in the API_Name case when. Dropping for now so I can focus on other things...
Hugin_Data_Output_Tall <- Hugin_Data_Output %>%
select(-c(2:7)) %>%
pivot_longer(cols = 3:62,
names_to = "Risk_Bin_String",
values_to = "Probability") %>%
mutate(Risk_Type = str_remove(Risk_Bin_String, pattern = "_[^_]+$") %>%
str_remove(pattern = "P\\("),
API_Name = case_when(Risk_Type == "PRQ_GT_n" ~ str_extract(Risk_Bin_String,
pattern = "GT_n_[0-9]"),
TRUE ~ str_extract(Risk_Bin_String,
pattern = "(?<=\\_)([[:alpha:]]*?)(?=\\=)"))) %>%
mutate(Risk_Bin = str_extract(Risk_Bin_String, pattern = "(?<==).[a-zA-Z0-9-]+"),
API_Name = fct_relevel(API_Name, c("estradiol", "ethinylestradiol", "ciprofloxacin",
"diclofenac", "ibuprofen", "paracetamol",
"Estrogens", "Painkillers", "AllAPI",
"GT_n_1", "GT_n_2", "GT_n_3",
"GT_n_4", "GT_n_5", "GT_n_6"))) %>%
select(-Risk_Bin_String) %>%
relocate(Probability, .after = last_col()) %>%
mutate(API_Name = case_when(API_Name == "AllAPI" ~ "ΣRQ",
TRUE ~ API_Name))
rlang::last_error()
Hugin_Data_Output_Tall <- Hugin_Data_Output %>%
select(-c(2:7)) %>%
pivot_longer(cols = 3:62,
names_to = "Risk_Bin_String",
values_to = "Probability") %>%
mutate(Risk_Type = str_remove(Risk_Bin_String, pattern = "_[^_]+$") %>%
str_remove(pattern = "P\\("),
API_Name = case_when(Risk_Type == "PRQ_GT_n" ~ str_extract(Risk_Bin_String,
pattern = "GT_n_[0-9]"),
TRUE ~ str_extract(Risk_Bin_String,
pattern = "(?<=\\_)([[:alpha:]]*?)(?=\\=)"))) %>%
mutate(Risk_Bin = str_extract(Risk_Bin_String, pattern = "(?<==).[a-zA-Z0-9-]+"),
API_Name = fct_relevel(API_Name, c("estradiol", "ethinylestradiol", "ciprofloxacin",
"diclofenac", "ibuprofen", "paracetamol",
"Estrogens", "Painkillers", "AllAPI",
"GT_n_1", "GT_n_2", "GT_n_3",
"GT_n_4", "GT_n_5", "GT_n_6"))) %>%
select(-Risk_Bin_String) %>%
relocate(Probability, .after = last_col()) %>%
mutate(API_Name = case_when(API_Name == "AllAPI" ~ "ΣRQ",
TRUE ~ API_Name))
rlang::last_error()
API_Name <- "AllAPI"
API_Name = case_when(API_Name == "AllAPI" ~ "ΣRQ",
TRUE ~ API_Name)
API_Name
Hugin_Data_Output_Tall <- Hugin_Data_Output %>%
select(-c(2:7)) %>%
pivot_longer(cols = 3:62,
names_to = "Risk_Bin_String",
values_to = "Probability") %>%
mutate(Risk_Type = str_remove(Risk_Bin_String, pattern = "_[^_]+$") %>%
str_remove(pattern = "P\\("),
API_Name = case_when(Risk_Type == "PRQ_GT_n" ~ str_extract(Risk_Bin_String,
pattern = "GT_n_[0-9]"),
TRUE ~ str_extract(Risk_Bin_String,
pattern = "(?<=\\_)([[:alpha:]]*?)(?=\\=)"))) %>%
mutate(Risk_Bin = str_extract(Risk_Bin_String, pattern = "(?<==).[a-zA-Z0-9-]+"),
API_Name = fct_relevel(API_Name, c("estradiol", "ethinylestradiol", "ciprofloxacin",
"diclofenac", "ibuprofen", "paracetamol",
"Estrogens", "Painkillers", "AllAPI",
"GT_n_1", "GT_n_2", "GT_n_3",
"GT_n_4", "GT_n_5", "GT_n_6"))) %>%
select(-Risk_Bin_String) %>%
relocate(Probability, .after = last_col()) %>%
mutate(API_Name = case_when(API_Name == "AllAPI" ~ "ΣRQ",
TRUE ~ API_Name))
rlang::last_error()
Hugin_Data_Output_Tall <- Hugin_Data_Output %>%
select(-c(2:7)) %>%
pivot_longer(cols = 3:62,
names_to = "Risk_Bin_String",
values_to = "Probability") %>%
mutate(Risk_Type = str_remove(Risk_Bin_String, pattern = "_[^_]+$") %>%
str_remove(pattern = "P\\("),
API_Name = case_when(Risk_Type == "PRQ_GT_n" ~ str_extract(Risk_Bin_String,
pattern = "GT_n_[0-9]"),
TRUE ~ str_extract(Risk_Bin_String,
pattern = "(?<=\\_)([[:alpha:]]*?)(?=\\=)"))) %>%
mutate(Risk_Bin = str_extract(Risk_Bin_String, pattern = "(?<==).[a-zA-Z0-9-]+"),
API_Name = fct_relevel(API_Name, c("estradiol", "ethinylestradiol", "ciprofloxacin",
"diclofenac", "ibuprofen", "paracetamol",
"Estrogens", "Painkillers", "AllAPI",
"GT_n_1", "GT_n_2", "GT_n_3",
"GT_n_4", "GT_n_5", "GT_n_6"))) %>%
select(-Risk_Bin_String) %>%
relocate(Probability, .after = last_col()) %>%
mutate(API_Name)
Hugin_Data_Output_Tall <- Hugin_Data_Output %>%
select(-c(2:7)) %>%
pivot_longer(cols = 3:62,
names_to = "Risk_Bin_String",
values_to = "Probability") %>%
mutate(Risk_Type = str_remove(Risk_Bin_String, pattern = "_[^_]+$") %>%
str_remove(pattern = "P\\("),
API_Name = case_when(Risk_Type == "PRQ_GT_n" ~ str_extract(Risk_Bin_String,
pattern = "GT_n_[0-9]"),
TRUE ~ str_extract(Risk_Bin_String,
pattern = "(?<=\\_)([[:alpha:]]*?)(?=\\=)"))) %>%
mutate(Risk_Bin = str_extract(Risk_Bin_String, pattern = "(?<==).[a-zA-Z0-9-]+"),
API_Name = fct_relevel(API_Name, c("estradiol", "ethinylestradiol", "ciprofloxacin",
"diclofenac", "ibuprofen", "paracetamol",
"Estrogens", "Painkillers", "AllAPI",
"GT_n_1", "GT_n_2", "GT_n_3",
"GT_n_4", "GT_n_5", "GT_n_6"))) %>%
select(-Risk_Bin_String) %>%
relocate(Probability, .after = last_col()) %>%
mutate(API_Name = case_when(API_Name == "AllAPI" ~ "ΣRQ",
TRUE ~ API_Name))
Hugin_Data_Output_Tall <- Hugin_Data_Output %>%
select(-c(2:7)) %>%
pivot_longer(cols = 3:62,
names_to = "Risk_Bin_String",
values_to = "Probability") %>%
mutate(Risk_Type = str_remove(Risk_Bin_String, pattern = "_[^_]+$") %>%
str_remove(pattern = "P\\("),
API_Name = case_when(Risk_Type == "PRQ_GT_n" ~ str_extract(Risk_Bin_String,
pattern = "GT_n_[0-9]"),
TRUE ~ str_extract(Risk_Bin_String,
pattern = "(?<=\\_)([[:alpha:]]*?)(?=\\=)"))) %>%
mutate(Risk_Bin = str_extract(Risk_Bin_String, pattern = "(?<==).[a-zA-Z0-9-]+"),
API_Name = fct_relevel(API_Name, c("estradiol", "ethinylestradiol", "ciprofloxacin",
"diclofenac", "ibuprofen", "paracetamol",
"Estrogens", "Painkillers", "AllAPI",
"GT_n_1", "GT_n_2", "GT_n_3",
"GT_n_4", "GT_n_5", "GT_n_6"))) %>%
select(-Risk_Bin_String) %>%
relocate(Probability, .after = last_col()) %>%
mutate(API_Name = case_when(API_Name == "AllAPI" ~ "help me",
TRUE ~ "help you"))
Hugin_Data_Output_Tall <- Hugin_Data_Output %>%
select(-c(2:7)) %>%
pivot_longer(cols = 3:62,
names_to = "Risk_Bin_String",
values_to = "Probability") %>%
mutate(Risk_Type = str_remove(Risk_Bin_String, pattern = "_[^_]+$") %>%
str_remove(pattern = "P\\("),
API_Name = case_when(Risk_Type == "PRQ_GT_n" ~ str_extract(Risk_Bin_String,
pattern = "GT_n_[0-9]"),
TRUE ~ str_extract(Risk_Bin_String,
pattern = "(?<=\\_)([[:alpha:]]*?)(?=\\=)"))) %>%
mutate(Risk_Bin = str_extract(Risk_Bin_String, pattern = "(?<==).[a-zA-Z0-9-]+"),
API_Name = fct_relevel(API_Name, c("estradiol", "ethinylestradiol", "ciprofloxacin",
"diclofenac", "ibuprofen", "paracetamol",
"Estrogens", "Painkillers", "AllAPI",
"GT_n_1", "GT_n_2", "GT_n_3",
"GT_n_4", "GT_n_5", "GT_n_6"))) %>%
select(-Risk_Bin_String) %>%
relocate(Probability, .after = last_col()) %>%
mutate(API_Name = case_when(API_Name == "AllAPI" ~ "Σ",
TRUE ~ "help you"))
Hugin_Data_Output_Tall <- Hugin_Data_Output %>%
select(-c(2:7)) %>%
pivot_longer(cols = 3:62,
names_to = "Risk_Bin_String",
values_to = "Probability") %>%
mutate(Risk_Type = str_remove(Risk_Bin_String, pattern = "_[^_]+$") %>%
str_remove(pattern = "P\\("),
API_Name = case_when(Risk_Type == "PRQ_GT_n" ~ str_extract(Risk_Bin_String,
pattern = "GT_n_[0-9]"),
TRUE ~ str_extract(Risk_Bin_String,
pattern = "(?<=\\_)([[:alpha:]]*?)(?=\\=)"))) %>%
mutate(Risk_Bin = str_extract(Risk_Bin_String, pattern = "(?<==).[a-zA-Z0-9-]+"),
API_Name = fct_relevel(API_Name, c("estradiol", "ethinylestradiol", "ciprofloxacin",
"diclofenac", "ibuprofen", "paracetamol",
"Estrogens", "Painkillers", "AllAPI",
"GT_n_1", "GT_n_2", "GT_n_3",
"GT_n_4", "GT_n_5", "GT_n_6"))) %>%
select(-Risk_Bin_String) %>%
relocate(Probability, .after = last_col()) %>%
mutate(API_Name = case_when(API_Name == "AllAPI" ~ "ΣRQ",
TRUE ~ "help you"))
Hugin_Data_Output_Tall <- Hugin_Data_Output %>%
select(-c(2:7)) %>%
pivot_longer(cols = 3:62,
names_to = "Risk_Bin_String",
values_to = "Probability") %>%
mutate(Risk_Type = str_remove(Risk_Bin_String, pattern = "_[^_]+$") %>%
str_remove(pattern = "P\\("),
API_Name = case_when(Risk_Type == "PRQ_GT_n" ~ str_extract(Risk_Bin_String,
pattern = "GT_n_[0-9]"),
TRUE ~ str_extract(Risk_Bin_String,
pattern = "(?<=\\_)([[:alpha:]]*?)(?=\\=)"))) %>%
mutate(Risk_Bin = str_extract(Risk_Bin_String, pattern = "(?<==).[a-zA-Z0-9-]+"),
API_Name = fct_relevel(API_Name, c("estradiol", "ethinylestradiol", "ciprofloxacin",
"diclofenac", "ibuprofen", "paracetamol",
"Estrogens", "Painkillers", "AllAPI",
"GT_n_1", "GT_n_2", "GT_n_3",
"GT_n_4", "GT_n_5", "GT_n_6"))) %>%
select(-Risk_Bin_String) %>%
relocate(Probability, .after = last_col()) %>%
mutate(API_Name = case_when(API_Name == "AllAPI" ~ "ΣRQ",
TRUE ~ API_Name))
View(Hugin_Data_Output_Tall)
Hugin_Data_Output_Tall <- Hugin_Data_Output %>%
select(-c(2:7)) %>%
pivot_longer(cols = 3:62,
names_to = "Risk_Bin_String",
values_to = "Probability") %>%
mutate(Risk_Type = str_remove(Risk_Bin_String, pattern = "_[^_]+$") %>%
str_remove(pattern = "P\\("),
API_Name = case_when(Risk_Type == "PRQ_GT_n" ~ str_extract(Risk_Bin_String,
pattern = "GT_n_[0-9]"),
TRUE ~ str_extract(Risk_Bin_String,
pattern = "(?<=\\_)([[:alpha:]]*?)(?=\\=)"))) %>%
mutate(Risk_Bin = str_extract(Risk_Bin_String, pattern = "(?<==).[a-zA-Z0-9-]+"),
API_Name = fct_relevel(API_Name, c("estradiol", "ethinylestradiol", "ciprofloxacin",
"diclofenac", "ibuprofen", "paracetamol",
"Estrogens", "Painkillers", "AllAPI",
"GT_n_1", "GT_n_2", "GT_n_3",
"GT_n_4", "GT_n_5", "GT_n_6"))) %>%
select(-Risk_Bin_String) %>%
relocate(Probability, .after = last_col()) %>%
mutate(API_Name = case_when(API_Name == "AllAPI" ~ "ΣRQ",
TRUE ~ !!API_Name))
Hugin_Data_Output_Tall <- Hugin_Data_Output %>%
select(-c(2:7)) %>%
pivot_longer(cols = 3:62,
names_to = "Risk_Bin_String",
values_to = "Probability") %>%
mutate(Risk_Type = str_remove(Risk_Bin_String, pattern = "_[^_]+$") %>%
str_remove(pattern = "P\\("),
API_Name = case_when(Risk_Type == "PRQ_GT_n" ~ str_extract(Risk_Bin_String,
pattern = "GT_n_[0-9]"),
TRUE ~ str_extract(Risk_Bin_String,
pattern = "(?<=\\_)([[:alpha:]]*?)(?=\\=)"))) %>%
mutate(Risk_Bin = str_extract(Risk_Bin_String, pattern = "(?<==).[a-zA-Z0-9-]+"),
API_Name = fct_relevel(API_Name, c("estradiol", "ethinylestradiol", "ciprofloxacin",
"diclofenac", "ibuprofen", "paracetamol",
"Estrogens", "Painkillers", "AllAPI",
"GT_n_1", "GT_n_2", "GT_n_3",
"GT_n_4", "GT_n_5", "GT_n_6"))) %>%
select(-Risk_Bin_String) %>%
relocate(Probability, .after = last_col()) %>%
mutate(API_Name = case_when(API_Name == "AllAPI" ~ "ΣRQ",
TRUE ~ .API_Name))
Hugin_Data_Output_Tall <- Hugin_Data_Output %>%
select(-c(2:7)) %>%
pivot_longer(cols = 3:62,
names_to = "Risk_Bin_String",
values_to = "Probability") %>%
mutate(Risk_Type = str_remove(Risk_Bin_String, pattern = "_[^_]+$") %>%
str_remove(pattern = "P\\("),
API_Name = case_when(Risk_Type == "PRQ_GT_n" ~ str_extract(Risk_Bin_String,
pattern = "GT_n_[0-9]"),
TRUE ~ str_extract(Risk_Bin_String,
pattern = "(?<=\\_)([[:alpha:]]*?)(?=\\=)"))) %>%
mutate(Risk_Bin = str_extract(Risk_Bin_String, pattern = "(?<==).[a-zA-Z0-9-]+"),
API_Name = fct_relevel(API_Name, c("estradiol", "ethinylestradiol", "ciprofloxacin",
"diclofenac", "ibuprofen", "paracetamol",
"Estrogens", "Painkillers", "AllAPI",
"GT_n_1", "GT_n_2", "GT_n_3",
"GT_n_4", "GT_n_5", "GT_n_6"))) %>%
select(-Risk_Bin_String) %>%
relocate(Probability, .after = last_col()) %>%
mutate(API_Name = str_replace(API_Name, "AllAPI", "ΣRQ"))
# Hugin has done its thing, so let's import the data
Hugin_Data_Output <- read_csv(file = "Data/Hugin/Hugin_to_R_datafile.csv",
show_col_types = FALSE)
# # Note the threshold used
# Hugin_Threshhold <-  unique(Hugin_Data_Output$PRQ_threshold)
# Hugin's many output interval columns need pivoting to tall data
# YAH: Something is fucked in the API_Name case when. Dropping for now so I can focus on other things...
Hugin_Data_Output_Tall <- Hugin_Data_Output %>%
select(-c(2:7)) %>%
pivot_longer(cols = 3:62,
names_to = "Risk_Bin_String",
values_to = "Probability") %>%
mutate(Risk_Type = str_remove(Risk_Bin_String, pattern = "_[^_]+$") %>%
str_remove(pattern = "P\\("),
API_Name = case_when(Risk_Type == "PRQ_GT_n" ~ str_extract(Risk_Bin_String,
pattern = "GT_n_[0-9]"),
TRUE ~ str_extract(Risk_Bin_String,
pattern = "(?<=\\_)([[:alpha:]]*?)(?=\\=)"))) %>%
mutate(Risk_Bin = str_extract(Risk_Bin_String, pattern = "(?<==).[a-zA-Z0-9-]+"),
API_Name = fct_relevel(API_Name, c("estradiol", "ethinylestradiol", "ciprofloxacin",
"diclofenac", "ibuprofen", "paracetamol",
"Estrogens", "Painkillers", "AllAPI",
"GT_n_1", "GT_n_2", "GT_n_3",
"GT_n_4", "GT_n_5", "GT_n_6"))) %>%
select(-Risk_Bin_String) %>%
relocate(Probability, .after = last_col()) %>%
mutate(API_Name = str_replace(API_Name, "AllAPI", "ΣRQ"))
scenario_number_labels = tibble(county = c("Troms & Finnmark (Rural)", "Trøndelag (Semi-Urban)", "Viken (Urban)")) %>%
crossing(Year_and_Population_Growth = fct_inorder(c("2020 & None", "2050 & Low",
"2050 & Main", "2050 & High")),
WWT_Scenario = fct_inorder(c("Current", "Secondary or better", "Best (all tertiary)"))) %>%
mutate(Scenario_Number = row_number()) %>%
relocate(Scenario_Number, 1)
# When was the dataset last updated?
Hugin_Output_Last_Updated <- file.info("Data/Hugin/Hugin_to_R_datafile.csv")$mtime
Hugin_Data_Output_Tall_Labelled <- Hugin_Data_Output_Tall %>%
left_join(scenario_number_labels, by = c("scenario_number" = "Scenario_Number")) %>%
relocate(county, Year_and_Population_Growth, WWT_Scenario, .after = scenario_number)
## Figure 05 ##
source(file = "src/graphics/RQ_map_year.R")
RQ_Distribts_by_Year_Growth
# 7:8 Aspect Ratio to keep API names in full view
ggsave(filename = "output/images/ready/figure05_yeargrowth_RQ.png", device = "png",
width = 21, height = 24, units = "cm")
## Figure 06 ##
source(file = "src/graphics/WWTP_RQ_bars.R")
WWTP_RQ_bars
ggsave(filename = "output/images/ready/figure06_wwtp_scenario_RQ.png", device = "png",
width = 21, height = 24, units = "cm")
# Hugin has done its thing, so let's import the data
Hugin_Data_Output <- read_csv(file = "Data/Hugin/Hugin_to_R_datafile.csv",
show_col_types = FALSE)
# # Note the threshold used
# Hugin_Threshhold <-  unique(Hugin_Data_Output$PRQ_threshold)
# Hugin's many output interval columns need pivoting to tall data
# YAH: Something is fucked in the API_Name case when. Dropping for now so I can focus on other things...
Hugin_Data_Output_Tall <- Hugin_Data_Output %>%
select(-c(2:7)) %>%
pivot_longer(cols = 3:62,
names_to = "Risk_Bin_String",
values_to = "Probability") %>%
# please excuse my horrible code
mutate(Risk_Type = str_remove(Risk_Bin_String, pattern = "_[^_]+$") %>%
str_remove(pattern = "P\\("),
API_Name = case_when(Risk_Type == "PRQ_GT_n" ~ str_extract(Risk_Bin_String,
pattern = "GT_n_[0-9]"),
TRUE ~ str_extract(Risk_Bin_String,
pattern = "(?<=\\_)([[:alpha:]]*?)(?=\\=)"))) %>%
mutate(API_Name = str_replace(API_Name, "AllAPI", "ΣRQ")) %>%
mutate(Risk_Bin = str_extract(Risk_Bin_String, pattern = "(?<==).[a-zA-Z0-9-]+"),
API_Name = fct_relevel(API_Name, c("estradiol", "ethinylestradiol", "ciprofloxacin",
"diclofenac", "ibuprofen", "paracetamol",
"Estrogens", "Painkillers", "AllAPI",
"GT_n_1", "GT_n_2", "GT_n_3",
"GT_n_4", "GT_n_5", "GT_n_6"))) %>%
select(-Risk_Bin_String) %>%
relocate(Probability, .after = last_col()) %>%
scenario_number_labels = tibble(county = c("Troms & Finnmark (Rural)", "Trøndelag (Semi-Urban)", "Viken (Urban)")) %>%
crossing(Year_and_Population_Growth = fct_inorder(c("2020 & None", "2050 & Low",
"2050 & Main", "2050 & High")),
WWT_Scenario = fct_inorder(c("Current", "Secondary or better", "Best (all tertiary)"))) %>%
mutate(Scenario_Number = row_number()) %>%
relocate(Scenario_Number, 1)
# Hugin has done its thing, so let's import the data
Hugin_Data_Output <- read_csv(file = "Data/Hugin/Hugin_to_R_datafile.csv",
show_col_types = FALSE)
# # Note the threshold used
# Hugin_Threshhold <-  unique(Hugin_Data_Output$PRQ_threshold)
# Hugin's many output interval columns need pivoting to tall data
# YAH: Something is fucked in the API_Name case when. Dropping for now so I can focus on other things...
Hugin_Data_Output_Tall <- Hugin_Data_Output %>%
select(-c(2:7)) %>%
pivot_longer(cols = 3:62,
names_to = "Risk_Bin_String",
values_to = "Probability") %>%
# please excuse my horrible code
mutate(Risk_Type = str_remove(Risk_Bin_String, pattern = "_[^_]+$") %>%
str_remove(pattern = "P\\("),
API_Name = case_when(Risk_Type == "PRQ_GT_n" ~ str_extract(Risk_Bin_String,
pattern = "GT_n_[0-9]"),
TRUE ~ str_extract(Risk_Bin_String,
pattern = "(?<=\\_)([[:alpha:]]*?)(?=\\=)"))) %>%
mutate(API_Name = str_replace(API_Name, "AllAPI", "ΣRQ")) %>%
mutate(Risk_Bin = str_extract(Risk_Bin_String, pattern = "(?<==).[a-zA-Z0-9-]+"),
API_Name = fct_relevel(API_Name, c("estradiol", "ethinylestradiol", "ciprofloxacin",
"diclofenac", "ibuprofen", "paracetamol",
"Estrogens", "Painkillers", "AllAPI",
"GT_n_1", "GT_n_2", "GT_n_3",
"GT_n_4", "GT_n_5", "GT_n_6"))) %>%
select(-Risk_Bin_String) %>%
relocate(Probability, .after = last_col())
scenario_number_labels = tibble(county = c("Troms & Finnmark (Rural)", "Trøndelag (Semi-Urban)", "Viken (Urban)")) %>%
crossing(Year_and_Population_Growth = fct_inorder(c("2020 & None", "2050 & Low",
"2050 & Main", "2050 & High")),
WWT_Scenario = fct_inorder(c("Current", "Secondary or better", "Best (all tertiary)"))) %>%
mutate(Scenario_Number = row_number()) %>%
relocate(Scenario_Number, 1)
# When was the dataset last updated?
Hugin_Output_Last_Updated <- file.info("Data/Hugin/Hugin_to_R_datafile.csv")$mtime
Hugin_Data_Output_Tall_Labelled <- Hugin_Data_Output_Tall %>%
left_join(scenario_number_labels, by = c("scenario_number" = "Scenario_Number")) %>%
relocate(county, Year_and_Population_Growth, WWT_Scenario, .after = scenario_number)
# Hugin has done its thing, so let's import the data
Hugin_Data_Output <- read_csv(file = "Data/Hugin/Hugin_to_R_datafile.csv",
show_col_types = FALSE)
# # Note the threshold used
# Hugin_Threshhold <-  unique(Hugin_Data_Output$PRQ_threshold)
# Hugin's many output interval columns need pivoting to tall data
# YAH: Something is fucked in the API_Name case when. Dropping for now so I can focus on other things...
Hugin_Data_Output_Tall <- Hugin_Data_Output %>%
select(-c(2:7)) %>%
pivot_longer(cols = 3:62,
names_to = "Risk_Bin_String",
values_to = "Probability") %>%
# please excuse my horrible code
mutate(Risk_Type = str_remove(Risk_Bin_String, pattern = "_[^_]+$") %>%
str_remove(pattern = "P\\("),
API_Name = case_when(Risk_Type == "PRQ_GT_n" ~ str_extract(Risk_Bin_String,
pattern = "GT_n_[0-9]"),
TRUE ~ str_extract(Risk_Bin_String,
pattern = "(?<=\\_)([[:alpha:]]*?)(?=\\=)"))) %>%
mutate(API_Name = str_replace(API_Name, "AllAPI", "ΣRQ")) %>%
mutate(Risk_Bin = str_extract(Risk_Bin_String, pattern = "(?<==).[a-zA-Z0-9-]+"),
API_Name = fct_relevel(API_Name, c("estradiol", "ethinylestradiol", "ciprofloxacin",
"diclofenac", "ibuprofen", "paracetamol",
"Estrogens", "Painkillers", "ΣRQ",
"GT_n_1", "GT_n_2", "GT_n_3",
"GT_n_4", "GT_n_5", "GT_n_6"))) %>%
select(-Risk_Bin_String) %>%
relocate(Probability, .after = last_col())
scenario_number_labels = tibble(county = c("Troms & Finnmark (Rural)", "Trøndelag (Semi-Urban)", "Viken (Urban)")) %>%
crossing(Year_and_Population_Growth = fct_inorder(c("2020 & None", "2050 & Low",
"2050 & Main", "2050 & High")),
WWT_Scenario = fct_inorder(c("Current", "Secondary or better", "Best (all tertiary)"))) %>%
mutate(Scenario_Number = row_number()) %>%
relocate(Scenario_Number, 1)
# When was the dataset last updated?
Hugin_Output_Last_Updated <- file.info("Data/Hugin/Hugin_to_R_datafile.csv")$mtime
Hugin_Data_Output_Tall_Labelled <- Hugin_Data_Output_Tall %>%
left_join(scenario_number_labels, by = c("scenario_number" = "Scenario_Number")) %>%
relocate(county, Year_and_Population_Growth, WWT_Scenario, .after = scenario_number)
## Figure 06 ##
source(file = "src/graphics/WWTP_RQ_bars.R")
WWTP_RQ_bars
ggsave(filename = "output/images/ready/figure06_wwtp_scenario_RQ.png", device = "png",
width = 21, height = 24, units = "cm")
## Figure 05 ##
source(file = "src/graphics/RQ_map_year.R")
RQ_Distribts_by_Year_Growth
# 7:8 Aspect Ratio to keep API names in full view
ggsave(filename = "output/images/ready/figure05_yeargrowth_RQ.png", device = "png",
width = 21, height = 24, units = "cm")
